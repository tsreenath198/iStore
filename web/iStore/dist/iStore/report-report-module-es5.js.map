{"version":3,"sources":["report-report-module-es5.js","webpack:///src/app/components/layout/report/report.component.html","webpack:///src/app/components/layout/report/report-routing.module.ts","webpack:///src/app/components/layout/report/report.component.css","webpack:///src/app/components/layout/report/report.component.ts","webpack:///src/app/components/layout/report/report.module.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"report-report-module\"],{\n\n/***/ \"./node_modules/raw-loader/dist/cjs.js!./src/app/components/layout/report/report.component.html\":\n/*!******************************************************************************************************!*\\\n  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/layout/report/report.component.html ***!\n  \\******************************************************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          Group By:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <select class=\\\"form-control\\\" name=\\\"pm\\\" [(ngModel)]=\\\"groupReq.groupBy\\\" #pm=\\\"ngModel\\\">\\r\\n          <option *ngFor=\\\"let cl of chooseDays\\\">{{ cl }} </option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          Set dates by:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"choosenDay\\\" (change)=\\\"setDates()\\\">\\r\\n          <option *ngFor=\\\"let cl of choosePrePopulateDays\\\">{{ cl }} </option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          From Date:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"groupReq.fromDate \\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          To Date:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" min=\\\"{{ groupReq.fromDate | date: 'yyyy-MM-dd' }}\\\"\\r\\n          [(ngModel)]=\\\"groupReq.toDate\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button class=\\\"btn ml-4\\\" (click)=\\\"getTotalData()\\\">Get Data</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-5\\\">\\r\\n    <div class=\\\"accordion\\\" *ngIf=\\\"groupByData.length > 0\\\" id=\\\"accordionGroupBy\\\">\\r\\n      <div class=\\\"card\\\" *ngFor=\\\"let group of groupByData; let i = index\\\">\\r\\n        <div class=\\\"card-header card-hover\\\" style=\\\"background-color: #808080;\\\" (click)=\\\"groupBy(group)\\\"\\r\\n          [attr.id]=\\\"'heading' + i\\\">\\r\\n          <div class=\\\"mb-0 clearfix\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapse' + i\\\" aria-expanded=\\\"false\\\"\\r\\n            [attr.aria-controls]=\\\"'#collapse' + i\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span *ngIf=\\\"group.type == 'year'\\\">\\r\\n                  <strong>Year:</strong> {{ group.year }}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"group.type == 'month'\\\">\\r\\n                  <strong>Month:</strong> {{ months[group.month - 1] }},{{\\r\\n                    group.year\\r\\n                  }}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"group.type == 'day'\\\">\\r\\n                  <strong>Date:</strong> {{ months[group.month - 1] }} {{group.value}},{{\\r\\n                    group.year\\r\\n                  }}\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span> <strong>Bank:</strong>{{ group.bankSum }} </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span> <strong>Cash:</strong>{{ group.cashSum }} </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span> <strong>Total:</strong> {{ group.sum }} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div [attr.id]=\\\"'collapse' + i\\\" class=\\\"collapse\\\" [attr.aria-labelledby]=\\\"'heading' + i\\\"\\r\\n          data-parent=\\\"#accordionGroupBy\\\">\\r\\n          <div class=\\\"card-body table  table-responsive table-hover table-striped\\\" style=\\\"padding: 0;\\\">\\r\\n            <div class=\\\"accordion\\\" *ngIf=\\\"valueByData.length > 0\\\" id=\\\"accordionFirstValue\\\">\\r\\n              <div class=\\\"card\\\" *ngFor=\\\"let group of valueByData; let j = index\\\">\\r\\n                <div class=\\\"card-header card-hover\\\" style=\\\"background-color: \\t#A9A9A9\\t;\\\" (click)=\\\"valueBy1(group)\\\"\\r\\n                  [attr.id]=\\\"'headingOne' + j\\\">\\r\\n                  <div class=\\\"mb-0 clearfix\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapseOne' + j\\\"\\r\\n                    aria-expanded=\\\"false\\\" [attr.aria-controls]=\\\"'#collapseOne' + j\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span class=\\\"float-left\\\" *ngIf=\\\"group.type == 'day'\\\">\\r\\n                          <strong>Date:</strong>\\r\\n                          {{ months[group.month - 1] }},{{ group.value }}\\r\\n                        </span>\\r\\n                        <span class=\\\"float-left\\\" *ngIf=\\\"group.type == 'month'\\\">\\r\\n                          <strong>Month:</strong> {{ months[group.month - 1] }}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span> <strong>Bank:</strong>{{ group.bankSum }} </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span> <strong>Cash:</strong>{{ group.cashSum }} </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span> <strong>Total:</strong> {{ group.sum }} </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div [attr.id]=\\\"'collapseOne' + j\\\" class=\\\"collapse\\\" [attr.aria-labelledby]=\\\"'headingOne' + j\\\"\\r\\n                  data-parent=\\\"#accordionFirstValue\\\">\\r\\n                  <div class=\\\"card-body table  table-responsive table-hover table-striped\\\" style=\\\"padding: 0;\\\"\\r\\n                    id=\\\"cardBody1\\\">\\r\\n                    <div *ngIf=\\\"valueByData2\\\">\\r\\n                      <div class=\\\"accordion\\\" *ngIf=\\\"valueByData.length > 0\\\" id=\\\"accordionSecondValue\\\">\\r\\n                        <div class=\\\"card\\\" *ngFor=\\\"let group of valueByData2; let k = index\\\">\\r\\n                          <div class=\\\"card-header card-hover\\\" style=\\\"background-color: #DCDCDC;\\\"\\r\\n                            (click)=\\\"valueBy2(group)\\\" [attr.id]=\\\"'headingTwo' + k\\\">\\r\\n                            <div class=\\\"mb-0 clearfix\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapseTwo' + k\\\"\\r\\n                              aria-expanded=\\\"false\\\" [attr.aria-controls]=\\\"'#collapseTwo' + k\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span *ngIf=\\\"group.type == 'day'\\\">\\r\\n                                    <strong>Date:</strong>\\r\\n                                    {{ months[group.month - 1] }},{{\\r\\n                                      group.value\\r\\n                                    }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span>\\r\\n                                    <strong>Bank:</strong>{{ group.bankSum }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span>\\r\\n                                    <strong>Cash:</strong>{{ group.cashSum }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span>\\r\\n                                    <strong>Total:</strong> {{ group.sum }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div>\\r\\n                            <div [attr.id]=\\\"'collapseTwo' + k\\\" class=\\\"collapse\\\"\\r\\n                              [attr.aria-labelledby]=\\\"'headingTwo' + k\\\" data-parent=\\\"#accordionSecondValue\\\">\\r\\n                              <div id=\\\"cardBody2\\\" class=\\\"card-body table  table-responsive table-hover table-striped\\\"\\r\\n                                style=\\\"padding: 0;\\\">\\r\\n                                <div>\\r\\n                                  <div *ngIf=\\\"\\r\\n                                      finalBills.length > 0 &&\\r\\n                                      showTable == 'cardBody2'\\r\\n                                    \\\">\\r\\n                                    <table style=\\\"width: 100%;table-layout: fixed;\\\">\\r\\n                                      <thead>\\r\\n                                        <!-- <tr>\\r\\n                                                  <td colspan=\\\"4\\\">\\r\\n                                                    <strong>Cash:</strong>{{ temp.cashTotal }}\\r\\n                                                  </td>\\r\\n                                                  <td><strong>Bank:</strong>{{ temp.bankTotal }}</td>\\r\\n                                                </tr> -->\\r\\n                                        <tr>\\r\\n                                          <th>Bill.no</th>\\r\\n                                          <th>Date</th>\\r\\n                                          <th>Total</th>\\r\\n                                          <th>Action</th>\\r\\n                                          <th></th>\\r\\n                                        </tr>\\r\\n                                      </thead>\\r\\n                                      <tbody>\\r\\n                                        <ng-container *ngFor=\\\"let bill of finalBills\\\">\\r\\n                                          <tr>\\r\\n                                            <td (click)=\\\"\\r\\n                                                openPopup(bill, billContent)\\r\\n                                              \\\">\\r\\n                                              {{ bill.id }}\\r\\n                                            </td>\\r\\n                                            <td (click)=\\\"\\r\\n                                                openPopup(bill, billContent)\\r\\n                                              \\\">\\r\\n                                              {{ bill.createdDate | date }}\\r\\n                                            </td>\\r\\n                                            <td (click)=\\\"\\r\\n                                                openPopup(bill, billContent)\\r\\n                                              \\\">\\r\\n                                              {{ bill.total }}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                              <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"edit(bill)\\\">\\r\\n                                                Edit\\r\\n                                                <i class=\\\"fa  fa-edit\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                              </button>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                              <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"delete(bill)\\\">\\r\\n                                                Delete\\r\\n                                                <i class=\\\"fa  fa-trash\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                              </button>\\r\\n                                            </td>\\r\\n                                          </tr>\\r\\n                                        </ng-container>\\r\\n                                      </tbody>\\r\\n                                    </table>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"\\r\\n                            finalBills.length > 0 && showTable == 'cardBody1'\\r\\n                          \\\">\\r\\n                          <table style=\\\"width: 100%;table-layout: fixed;\\\">\\r\\n                            <thead>\\r\\n                              <tr>\\r\\n                                <th>Bill.no</th>\\r\\n                                <th>Date</th>\\r\\n                                <th>Total</th>\\r\\n                                <th>Action</th>\\r\\n                                <th></th>\\r\\n                              </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                              <ng-container *ngFor=\\\"let bill of finalBills\\\">\\r\\n                                <tr>\\r\\n                                  <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                                    {{ bill.id }}\\r\\n                                  </td>\\r\\n                                  <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                                    {{ bill.createdDate | date }}\\r\\n                                  </td>\\r\\n                                  <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                                    {{ bill.total }}\\r\\n                                  </td>\\r\\n                                  <td>\\r\\n                                    <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"edit(bill)\\\">\\r\\n                                      Edit\\r\\n                                      <i class=\\\"fa  fa-edit\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    </button>\\r\\n                                  </td>\\r\\n                                  <td>\\r\\n                                    <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"delete(bill)\\\">\\r\\n                                      Delete\\r\\n                                      <i class=\\\"fa  fa-trash\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    </button>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </ng-container>\\r\\n                            </tbody>\\r\\n                          </table>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"table  table-responsive table-hover table-striped\\\"\\r\\n              *ngIf=\\\"groupReq.groupBy == 'Day' && finalBills.length > 0\\\">\\r\\n              <table style=\\\"width: 100%;table-layout: fixed;\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Bill.no</th>\\r\\n                    <th>Date</th>\\r\\n                    <th>Total</th>\\r\\n                    <th>Action</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <ng-container *ngFor=\\\"let bill of finalBills\\\">\\r\\n                    <tr>\\r\\n                      <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                        {{ bill.id }}\\r\\n                      </td>\\r\\n                      <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                        {{ bill.createdDate | date }}\\r\\n                      </td>\\r\\n                      <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                        {{ bill.total }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"edit(bill)\\\">\\r\\n                          Edit\\r\\n                          <i class=\\\"fa  fa-edit\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"delete(bill)\\\">\\r\\n                          Delete\\r\\n                          <i class=\\\"fa  fa-trash\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"pt-5 pl-5\\\" *ngIf=\\\"groupByData.length == 0\\\">\\r\\n      <h3>\\r\\n        No data available!\\r\\n      </h3>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div\\r\\n      class=\\\"pt-5 pl-5\\\"\\r\\n      *ngIf=\\\"groupReq.groupBy == 'Day' && finalBills.length == 0\\\"\\r\\n    >\\r\\n      <h3>No bills available on {{ this.groupReq.fromDate | date }}!</h3>\\r\\n    </div> -->\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #billContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">Bill</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div id=\\\"print-section\\\">\\r\\n        <div style=\\\"text-align: center;\\\">\\r\\n          <small>NATURAL FRESH</small><br />\\r\\n          <small>SRI YOGESHWARA ENTERPRISE</small><br />\\r\\n          <small>TAX INVOICE #{{ popupContent.id }}</small><br />\\r\\n          <small>YELLAMMAGUTTA, NZB</small><br />\\r\\n        </div>\\r\\n        <hr />\\r\\n        <div style=\\\"display: inline;\\\">\\r\\n          <div style=\\\"float: left;\\\">\\r\\n            <p *ngIf=\\\"popupContent?.contact?.name\\\">\\r\\n              <small>Name: {{ popupContent.contact.name }}</small>\\r\\n            </p>\\r\\n            <p>\\r\\n              <small>Date:{{ popupContent.createdDate | date }},{{\\r\\n                  popupContent.createdDate | date: \\\"h:mm:ss a\\\"\\r\\n                }}</small>\\r\\n            </p>\\r\\n          </div>\\r\\n          <div style=\\\"float: right;\\\">\\r\\n            <p *ngIf=\\\"popupContent?.contact?.phone?.length >= 10\\\">\\r\\n              <small>Phone: {{ popupContent.contact.phone }}</small>\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <table class=\\\"table table-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Qty</th>\\r\\n                <th>Price</th>\\r\\n                <th>Disc(%)</th>\\r\\n                <th>Total</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let item of popupContent.items; let i = index\\\">\\r\\n                <td>\\r\\n                  {{ item.product.name }}({{ item.product.category.name }})\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.quantity }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.price }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.discount }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.total }}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"popupContent.totalDiscount\\\">\\r\\n                <td colspan=\\\"4\\\">\\r\\n                  <b>Assitional Discount</b>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <b>{{ popupContent.totalDiscount }}</b>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"4\\\">\\r\\n                  <b>Total</b>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <b>{{ popupContent.total }}</b>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <span *ngIf=\\\"popupContent.paymentMode\\\">\\r\\n            <hr />\\r\\n            Payment Mode : {{ popupContent?.paymentMode }}</span>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center;\\\">\\r\\n          <hr />\\r\\n          <small>THANK YOU! VISIT AGAIN</small>\\r\\n          <hr />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" printSectionId=\\\"print-section\\\" [printStyle]=\\\"{\\r\\n          div: { 'margin-left': '-5px', 'margin-right': '-5px' }\\r\\n        }\\\" ngxPrint>\\r\\n        Print\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close('Close click')\\\">\\r\\n        Close\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\");\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/report/report-routing.module.ts\":\n/*!*******************************************************************!*\\\n  !*** ./src/app/components/layout/report/report-routing.module.ts ***!\n  \\*******************************************************************/\n/*! exports provided: ReportRoutingModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReportRoutingModule\", function() { return ReportRoutingModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ \"./node_modules/@angular/router/fesm2015/router.js\");\n/* harmony import */ var _report_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./report.component */ \"./src/app/components/layout/report/report.component.ts\");\n\n\n\n\nconst routes = [\n    {\n        path: \"\",\n        component: _report_component__WEBPACK_IMPORTED_MODULE_3__[\"ReportComponent\"]\n    }\n];\nlet ReportRoutingModule = class ReportRoutingModule {\n};\nReportRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"].forChild(routes)],\n        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"]]\n    })\n], ReportRoutingModule);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/report/report.component.css\":\n/*!***************************************************************!*\\\n  !*** ./src/app/components/layout/report/report.component.css ***!\n  \\***************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"/* .table-hover:hover{\\r\\n    background-color: #dee2e6;\\r\\n} */\\r\\n/* Modal Header */\\r\\n.modal-header {\\r\\n    background-color: #343a40;\\r\\n    color: white;\\r\\n  }\\r\\n/* Modal Body */\\r\\n.modal-body {padding: 2px 16px;}\\r\\n/* Modal Footer */\\r\\n.modal-footer {\\r\\n    background-color: #343a40;\\r\\n    color: white;\\r\\n  }\\r\\n/* Modal Content */\\r\\n.modal-content {\\r\\n    position: relative;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    border: 1px solid #888;\\r\\n    width: 100%;\\r\\n    -webkit-animation-name: animatetop;\\r\\n            animation-name: animatetop;\\r\\n    -webkit-animation-duration: 0.4s;\\r\\n            animation-duration: 0.4s\\r\\n  }\\r\\n/* Add Animation */\\r\\n@-webkit-keyframes animatetop {\\r\\n    from {top: -300px; opacity: 0}\\r\\n    to {top: 0; opacity: 1}\\r\\n  }\\r\\n@keyframes animatetop {\\r\\n    from {top: -300px; opacity: 0}\\r\\n    to {top: 0; opacity: 1}\\r\\n  }\\r\\ntable\\r\\n{\\r\\n    margin: 10px 0;\\r\\n    width: 100%;\\r\\n}\\r\\n.card-hover:hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n.panel-head{\\r\\n  display: block;\\r\\n  margin-top:5px ;\\r\\n  width:100%;\\r\\n  border: 1px solid black\\r\\n}\\r\\n.btn{\\r\\n  font-size: 1rem;\\r\\n  border-radius: 20px;\\r\\n  border: 1px solid yellowgreen ;\\r\\n  background-color: inherit;\\r\\n  color: currentColor;\\r\\n}\\r\\n.btn:hover{\\r\\n  background-color:greenyellow ;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvcmVwb3J0L3JlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsaUJBQWlCO0FBQ2pCO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDtBQUVBLGVBQWU7QUFDZixhQUFhLGlCQUFpQixDQUFDO0FBRS9CLGlCQUFpQjtBQUNqQjtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7QUFFQSxrQkFBa0I7QUFDbEI7SUFDRSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFVBQVU7SUFDVixzQkFBc0I7SUFDdEIsV0FBVztJQUNYLGtDQUEwQjtZQUExQiwwQkFBMEI7SUFDMUIsZ0NBQXVCO1lBQXZCO0VBQ0Y7QUFFQSxrQkFBa0I7QUFDbEI7SUFDRSxNQUFNLFdBQVcsRUFBRSxVQUFVO0lBQzdCLElBQUksTUFBTSxFQUFFLFVBQVU7RUFDeEI7QUFIQTtJQUNFLE1BQU0sV0FBVyxFQUFFLFVBQVU7SUFDN0IsSUFBSSxNQUFNLEVBQUUsVUFBVTtFQUN4QjtBQUNBOztJQUVFLGNBQWM7SUFDZCxXQUFXO0FBQ2Y7QUFDQTtFQUNFLGVBQWU7QUFDakI7QUFDQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0VBQ2YsVUFBVTtFQUNWO0FBQ0Y7QUFDQTtFQUNFLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsOEJBQThCO0VBQzlCLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF5b3V0L3JlcG9ydC9yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC50YWJsZS1ob3Zlcjpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZWUyZTY7XHJcbn0gKi9cclxuLyogTW9kYWwgSGVhZGVyICovXHJcbi5tb2RhbC1oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbiAgXHJcbiAgLyogTW9kYWwgQm9keSAqL1xyXG4gIC5tb2RhbC1ib2R5IHtwYWRkaW5nOiAycHggMTZweDt9XHJcbiAgXHJcbiAgLyogTW9kYWwgRm9vdGVyICovXHJcbiAgLm1vZGFsLWZvb3RlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAvKiBNb2RhbCBDb250ZW50ICovXHJcbiAgLm1vZGFsLWNvbnRlbnQge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGFuaW1hdGlvbi1uYW1lOiBhbmltYXRldG9wO1xyXG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjRzXHJcbiAgfVxyXG4gIFxyXG4gIC8qIEFkZCBBbmltYXRpb24gKi9cclxuICBAa2V5ZnJhbWVzIGFuaW1hdGV0b3Age1xyXG4gICAgZnJvbSB7dG9wOiAtMzAwcHg7IG9wYWNpdHk6IDB9XHJcbiAgICB0byB7dG9wOiAwOyBvcGFjaXR5OiAxfVxyXG4gIH1cclxuICB0YWJsZVxyXG57XHJcbiAgICBtYXJnaW46IDEwcHggMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5jYXJkLWhvdmVyOmhvdmVye1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4ucGFuZWwtaGVhZHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tdG9wOjVweCA7XHJcbiAgd2lkdGg6MTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFja1xyXG59XHJcbi5idG57XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgeWVsbG93Z3JlZW4gO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcclxufVxyXG5cclxuLmJ0bjpob3ZlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOmdyZWVueWVsbG93IDtcclxufSJdfQ== */\");\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/report/report.component.ts\":\n/*!**************************************************************!*\\\n  !*** ./src/app/components/layout/report/report.component.ts ***!\n  \\**************************************************************/\n/*! exports provided: ReportComponent */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReportComponent\", function() { return ReportComponent; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/http.service */ \"./src/app/services/http.service.ts\");\n/* harmony import */ var src_app_constants_url_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/constants/url-constants */ \"./src/app/constants/url-constants.ts\");\n/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ \"./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js\");\n/* harmony import */ var src_app_services_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/storage.service */ \"./src/app/services/storage.service.ts\");\n/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ \"./node_modules/@angular/router/fesm2015/router.js\");\n\n\n\n\n\n\n\nlet ReportComponent = class ReportComponent {\n    constructor(router, http, modalService, storageService) {\n        this.router = router;\n        this.http = http;\n        this.modalService = modalService;\n        this.storageService = storageService;\n        this.orderList = [];\n        this.URL = new src_app_constants_url_constants__WEBPACK_IMPORTED_MODULE_3__[\"URLConstants\"]();\n        this.popupContent = {};\n        this.cardTable = [];\n        this.groupByData = [];\n        this.valueByData = [];\n        this.finalBills = [];\n        this.valueByData2 = [];\n        this.showTable = \"\";\n        this.chooseDays = [\"Day\", \"Month\", \"Year\"];\n        this.choosePrePopulateDays = [\"Current week\", \"Current month\", \"Current year\", \"Manual\"];\n        this.choosenDay = \"Day\";\n        this.getBillURLData = {};\n        this.months = [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\"\n        ];\n        this.groupReq = {\n            fromDate: \"\",\n            groupBy: \"\",\n            toDate: \"\"\n        };\n        this.closeResult = \"\";\n    }\n    ngOnInit() {\n        this.groupReq.groupBy = \"Day\";\n        this.setCurrentDates();\n        // let date = new Date();\n        // let day = date.getDate();\n        // let month = date.getMonth() + 1;\n        // let year = date.getFullYear();\n        // if (month < 10) {\n        //   month = 0 + month;\n        // }\n        // if (day < 10) day = 0 + day;\n        // var today = year + \"-\" + month + \"-\" + day;\n        this.getTotalData();\n    }\n    setCurrentDates() {\n        this.groupReq.fromDate = new Date().toISOString().substring(0, 10);\n        this.groupReq.toDate = new Date().toISOString().substring(0, 10);\n    }\n    getTotalData() {\n        this.finalBills = [];\n        this.http\n            .get(this.URL.ReportByGroup +\n            this.groupReq.fromDate +\n            \"&groupBy=\" +\n            this.groupReq.groupBy +\n            \"&toDate=\" +\n            this.groupReq.toDate)\n            .subscribe(resp => {\n            this.groupByData = resp;\n        });\n    }\n    valueBy1(data) {\n        this.valueByData2 = [];\n        this.finalBills = [];\n        console.log(data);\n        let reqUrl = \"\";\n        if (data.type == \"day\") {\n            this.getDateBills(data);\n            this.showTable = \"cardBody1\";\n        }\n        else if (data.type == \"month\") {\n            document.body.style.cursor = \"progress\";\n            reqUrl =\n                this.URL.ReportByValue +\n                    data.value +\n                    \"&month=\" +\n                    data.month +\n                    \"&type=\" +\n                    data.type +\n                    \"&year=\" +\n                    data.year +\n                    \"&fromDate=\" +\n                    this.groupReq.fromDate +\n                    \"&toDate=\" +\n                    this.groupReq.toDate;\n            this.http.get(reqUrl).subscribe(resp => {\n                this.valueByData2 = resp;\n                document.body.style.cursor = \"default\";\n            });\n        }\n    }\n    groupBy(data) {\n        this.valueByData = [];\n        this.valueByData2 = [];\n        this.finalBills = [];\n        console.log(data);\n        if (data.type == \"day\") {\n            this.getDateBills(data);\n        }\n        else {\n            let reqUrl = \"\";\n            reqUrl =\n                this.URL.ReportByValue +\n                    data.value +\n                    \"&month=\" +\n                    data.month +\n                    \"&type=\" +\n                    data.type +\n                    \"&year=\" +\n                    data.year +\n                    \"&fromDate=\" +\n                    this.groupReq.fromDate +\n                    \"&toDate=\" +\n                    this.groupReq.toDate;\n            this.http.get(reqUrl).subscribe(resp => {\n                this.valueByData = resp;\n            });\n        }\n    }\n    valueBy2(data) {\n        this.showTable = \"cardBody2\";\n        this.getDateBills(data);\n    }\n    getDateBills(data) {\n        this.finalBills = [];\n        this.getBillURLData = data;\n        let reqUrl = this.URL.ReportGetBills +\n            data.month +\n            \"&value=\" +\n            data.value +\n            \"&year=\" +\n            data.year;\n        this.http.get(reqUrl).subscribe(resp => {\n            this.finalBills = resp;\n        });\n    }\n    delete(order) {\n        if (window.confirm(\"Do you want to delete the bill?\")) {\n            this.http.delete(this.URL.OrderDelete + order.id).subscribe(resp => {\n                this.getDateBills(this.getBillURLData);\n                //this.filterData(date);\n                window.alert(\"Bill deleted successfully\");\n            });\n        }\n    }\n    edit(order) {\n        this.storageService.orderId = order.id;\n        this.router.navigate([\"layout/bill\"]);\n    }\n    openPopup(order, billContent) {\n        this.popupContent = order;\n        this.open(billContent);\n    }\n    /**\n     * @param\n     * 1) content consists the modal instance\n     * 2) Selected contains the code of selected row\n     */\n    open(content) {\n        this.modalRef = this.modalService.open(content);\n        this.modalRef.result.then(result => {\n            this.closeResult = `Closed with: ${result}`;\n        }, reason => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n    close() {\n        this.modalRef.close();\n    }\n    getDismissReason(reason) {\n        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"ModalDismissReasons\"].ESC) {\n            return \"by pressing ESC\";\n        }\n        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"ModalDismissReasons\"].BACKDROP_CLICK) {\n            return \"by clicking on a backdrop\";\n        }\n        else {\n            return `with: ${reason}`;\n        }\n    }\n    // public setToDate() {\n    //   let temp = new Date(this.groupReq.fromDate);\n    //   this.groupReq.toDate = temp;\n    // }\n    setDates() {\n        this.setCurrentDates();\n        if (this.choosenDay == this.choosePrePopulateDays[0]) {\n            //week\n            var now = new Date();\n            var firstDayOfWeek = new Date(now.setDate(now.getDate() - now.getDay()));\n            this.groupReq.fromDate = firstDayOfWeek.toISOString().substring(0, 10);\n        }\n        else if (this.choosenDay == this.choosePrePopulateDays[1]) {\n            //month\n            //new Date(date.getFullYear(), date.getMonth(), 1)\n            this.groupReq.fromDate = new Date(new Date().getFullYear(), new Date().getMonth(), 2)\n                .toISOString()\n                .substring(0, 10);\n        }\n        else if (this.choosenDay == this.choosePrePopulateDays[2]) {\n            //year\n            new Date().toISOString().substring(0, 10);\n            this.groupReq.fromDate = new Date(new Date().getFullYear(), 0, 2)\n                .toISOString()\n                .substring(0, 10);\n        }\n        else {\n            this.groupReq.fromDate = '';\n            this.groupReq.toDate = '';\n        }\n    }\n};\nReportComponent.ctorParameters = () => [\n    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__[\"Router\"] },\n    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_2__[\"HttpService\"] },\n    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__[\"NgbModal\"] },\n    { type: src_app_services_storage_service__WEBPACK_IMPORTED_MODULE_5__[\"StorageService\"] }\n];\nReportComponent = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Component\"])({\n        selector: \"app-report\",\n        template: tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! raw-loader!./report.component.html */ \"./node_modules/raw-loader/dist/cjs.js!./src/app/components/layout/report/report.component.html\")).default,\n        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! ./report.component.css */ \"./src/app/components/layout/report/report.component.css\")).default]\n    })\n], ReportComponent);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/report/report.module.ts\":\n/*!***********************************************************!*\\\n  !*** ./src/app/components/layout/report/report.module.ts ***!\n  \\***********************************************************/\n/*! exports provided: ReportModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReportModule\", function() { return ReportModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/* harmony import */ var _report_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./report-routing.module */ \"./src/app/components/layout/report/report-routing.module.ts\");\n/* harmony import */ var _report_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./report.component */ \"./src/app/components/layout/report/report.component.ts\");\n/* harmony import */ var ngx_print__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-print */ \"./node_modules/ngx-print/fesm2015/ngx-print.js\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ \"./node_modules/@angular/forms/fesm2015/forms.js\");\n\n\n\n\n\n\n\nlet ReportModule = class ReportModule {\n};\nReportModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        declarations: [_report_component__WEBPACK_IMPORTED_MODULE_4__[\"ReportComponent\"]],\n        imports: [\n            _angular_common__WEBPACK_IMPORTED_MODULE_2__[\"CommonModule\"],\n            _report_routing_module__WEBPACK_IMPORTED_MODULE_3__[\"ReportRoutingModule\"],\n            _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormsModule\"],\n            ngx_print__WEBPACK_IMPORTED_MODULE_5__[\"NgxPrintModule\"]\n        ]\n    })\n], ReportModule);\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=report-report-module-es2015.js.map","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          Group By:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <select class=\\\"form-control\\\" name=\\\"pm\\\" [(ngModel)]=\\\"groupReq.groupBy\\\" #pm=\\\"ngModel\\\">\\r\\n          <option *ngFor=\\\"let cl of chooseDays\\\">{{ cl }} </option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          Set dates by:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <select class=\\\"form-control\\\" [(ngModel)]=\\\"choosenDay\\\" (change)=\\\"setDates()\\\">\\r\\n          <option *ngFor=\\\"let cl of choosePrePopulateDays\\\">{{ cl }} </option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          From Date:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"groupReq.fromDate \\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 p-3\\\">\\r\\n        <h4>\\r\\n          To Date:\\r\\n        </h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-8 p-3\\\">\\r\\n        <input type=\\\"date\\\" class=\\\"form-control\\\" min=\\\"{{ groupReq.fromDate | date: 'yyyy-MM-dd' }}\\\"\\r\\n          [(ngModel)]=\\\"groupReq.toDate\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button class=\\\"btn ml-4\\\" (click)=\\\"getTotalData()\\\">Get Data</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-5\\\">\\r\\n    <div class=\\\"accordion\\\" *ngIf=\\\"groupByData.length > 0\\\" id=\\\"accordionGroupBy\\\">\\r\\n      <div class=\\\"card\\\" *ngFor=\\\"let group of groupByData; let i = index\\\">\\r\\n        <div class=\\\"card-header card-hover\\\" style=\\\"background-color: #808080;\\\" (click)=\\\"groupBy(group)\\\"\\r\\n          [attr.id]=\\\"'heading' + i\\\">\\r\\n          <div class=\\\"mb-0 clearfix\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapse' + i\\\" aria-expanded=\\\"false\\\"\\r\\n            [attr.aria-controls]=\\\"'#collapse' + i\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span *ngIf=\\\"group.type == 'year'\\\">\\r\\n                  <strong>Year:</strong> {{ group.year }}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"group.type == 'month'\\\">\\r\\n                  <strong>Month:</strong> {{ months[group.month - 1] }},{{\\r\\n                    group.year\\r\\n                  }}\\r\\n                </span>\\r\\n                <span *ngIf=\\\"group.type == 'day'\\\">\\r\\n                  <strong>Date:</strong> {{ months[group.month - 1] }} {{group.value}},{{\\r\\n                    group.year\\r\\n                  }}\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span> <strong>Bank:</strong>{{ group.bankSum }} </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span> <strong>Cash:</strong>{{ group.cashSum }} </span>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-3\\\">\\r\\n                <span> <strong>Total:</strong> {{ group.sum }} </span>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div [attr.id]=\\\"'collapse' + i\\\" class=\\\"collapse\\\" [attr.aria-labelledby]=\\\"'heading' + i\\\"\\r\\n          data-parent=\\\"#accordionGroupBy\\\">\\r\\n          <div class=\\\"card-body table  table-responsive table-hover table-striped\\\" style=\\\"padding: 0;\\\">\\r\\n            <div class=\\\"accordion\\\" *ngIf=\\\"valueByData.length > 0\\\" id=\\\"accordionFirstValue\\\">\\r\\n              <div class=\\\"card\\\" *ngFor=\\\"let group of valueByData; let j = index\\\">\\r\\n                <div class=\\\"card-header card-hover\\\" style=\\\"background-color: \\t#A9A9A9\\t;\\\" (click)=\\\"valueBy1(group)\\\"\\r\\n                  [attr.id]=\\\"'headingOne' + j\\\">\\r\\n                  <div class=\\\"mb-0 clearfix\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapseOne' + j\\\"\\r\\n                    aria-expanded=\\\"false\\\" [attr.aria-controls]=\\\"'#collapseOne' + j\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span class=\\\"float-left\\\" *ngIf=\\\"group.type == 'day'\\\">\\r\\n                          <strong>Date:</strong>\\r\\n                          {{ months[group.month - 1] }},{{ group.value }}\\r\\n                        </span>\\r\\n                        <span class=\\\"float-left\\\" *ngIf=\\\"group.type == 'month'\\\">\\r\\n                          <strong>Month:</strong> {{ months[group.month - 1] }}\\r\\n                        </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span> <strong>Bank:</strong>{{ group.bankSum }} </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span> <strong>Cash:</strong>{{ group.cashSum }} </span>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-3\\\">\\r\\n                        <span> <strong>Total:</strong> {{ group.sum }} </span>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div [attr.id]=\\\"'collapseOne' + j\\\" class=\\\"collapse\\\" [attr.aria-labelledby]=\\\"'headingOne' + j\\\"\\r\\n                  data-parent=\\\"#accordionFirstValue\\\">\\r\\n                  <div class=\\\"card-body table  table-responsive table-hover table-striped\\\" style=\\\"padding: 0;\\\"\\r\\n                    id=\\\"cardBody1\\\">\\r\\n                    <div *ngIf=\\\"valueByData2\\\">\\r\\n                      <div class=\\\"accordion\\\" *ngIf=\\\"valueByData.length > 0\\\" id=\\\"accordionSecondValue\\\">\\r\\n                        <div class=\\\"card\\\" *ngFor=\\\"let group of valueByData2; let k = index\\\">\\r\\n                          <div class=\\\"card-header card-hover\\\" style=\\\"background-color: #DCDCDC;\\\"\\r\\n                            (click)=\\\"valueBy2(group)\\\" [attr.id]=\\\"'headingTwo' + k\\\">\\r\\n                            <div class=\\\"mb-0 clearfix\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#collapseTwo' + k\\\"\\r\\n                              aria-expanded=\\\"false\\\" [attr.aria-controls]=\\\"'#collapseTwo' + k\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span *ngIf=\\\"group.type == 'day'\\\">\\r\\n                                    <strong>Date:</strong>\\r\\n                                    {{ months[group.month - 1] }},{{\\r\\n                                      group.value\\r\\n                                    }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span>\\r\\n                                    <strong>Bank:</strong>{{ group.bankSum }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span>\\r\\n                                    <strong>Cash:</strong>{{ group.cashSum }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-md-3\\\">\\r\\n                                  <span>\\r\\n                                    <strong>Total:</strong> {{ group.sum }}\\r\\n                                  </span>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div>\\r\\n                            <div [attr.id]=\\\"'collapseTwo' + k\\\" class=\\\"collapse\\\"\\r\\n                              [attr.aria-labelledby]=\\\"'headingTwo' + k\\\" data-parent=\\\"#accordionSecondValue\\\">\\r\\n                              <div id=\\\"cardBody2\\\" class=\\\"card-body table  table-responsive table-hover table-striped\\\"\\r\\n                                style=\\\"padding: 0;\\\">\\r\\n                                <div>\\r\\n                                  <div *ngIf=\\\"\\r\\n                                      finalBills.length > 0 &&\\r\\n                                      showTable == 'cardBody2'\\r\\n                                    \\\">\\r\\n                                    <table style=\\\"width: 100%;table-layout: fixed;\\\">\\r\\n                                      <thead>\\r\\n                                        <!-- <tr>\\r\\n                                                  <td colspan=\\\"4\\\">\\r\\n                                                    <strong>Cash:</strong>{{ temp.cashTotal }}\\r\\n                                                  </td>\\r\\n                                                  <td><strong>Bank:</strong>{{ temp.bankTotal }}</td>\\r\\n                                                </tr> -->\\r\\n                                        <tr>\\r\\n                                          <th>Bill.no</th>\\r\\n                                          <th>Date</th>\\r\\n                                          <th>Total</th>\\r\\n                                          <th>Action</th>\\r\\n                                          <th></th>\\r\\n                                        </tr>\\r\\n                                      </thead>\\r\\n                                      <tbody>\\r\\n                                        <ng-container *ngFor=\\\"let bill of finalBills\\\">\\r\\n                                          <tr>\\r\\n                                            <td (click)=\\\"\\r\\n                                                openPopup(bill, billContent)\\r\\n                                              \\\">\\r\\n                                              {{ bill.id }}\\r\\n                                            </td>\\r\\n                                            <td (click)=\\\"\\r\\n                                                openPopup(bill, billContent)\\r\\n                                              \\\">\\r\\n                                              {{ bill.createdDate | date }}\\r\\n                                            </td>\\r\\n                                            <td (click)=\\\"\\r\\n                                                openPopup(bill, billContent)\\r\\n                                              \\\">\\r\\n                                              {{ bill.total }}\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                              <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"edit(bill)\\\">\\r\\n                                                Edit\\r\\n                                                <i class=\\\"fa  fa-edit\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                              </button>\\r\\n                                            </td>\\r\\n                                            <td>\\r\\n                                              <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"delete(bill)\\\">\\r\\n                                                Delete\\r\\n                                                <i class=\\\"fa  fa-trash\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                              </button>\\r\\n                                            </td>\\r\\n                                          </tr>\\r\\n                                        </ng-container>\\r\\n                                      </tbody>\\r\\n                                    </table>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div>\\r\\n                        <div *ngIf=\\\"\\r\\n                            finalBills.length > 0 && showTable == 'cardBody1'\\r\\n                          \\\">\\r\\n                          <table style=\\\"width: 100%;table-layout: fixed;\\\">\\r\\n                            <thead>\\r\\n                              <tr>\\r\\n                                <th>Bill.no</th>\\r\\n                                <th>Date</th>\\r\\n                                <th>Total</th>\\r\\n                                <th>Action</th>\\r\\n                                <th></th>\\r\\n                              </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                              <ng-container *ngFor=\\\"let bill of finalBills\\\">\\r\\n                                <tr>\\r\\n                                  <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                                    {{ bill.id }}\\r\\n                                  </td>\\r\\n                                  <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                                    {{ bill.createdDate | date }}\\r\\n                                  </td>\\r\\n                                  <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                                    {{ bill.total }}\\r\\n                                  </td>\\r\\n                                  <td>\\r\\n                                    <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"edit(bill)\\\">\\r\\n                                      Edit\\r\\n                                      <i class=\\\"fa  fa-edit\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    </button>\\r\\n                                  </td>\\r\\n                                  <td>\\r\\n                                    <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"delete(bill)\\\">\\r\\n                                      Delete\\r\\n                                      <i class=\\\"fa  fa-trash\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                                    </button>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </ng-container>\\r\\n                            </tbody>\\r\\n                          </table>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"table  table-responsive table-hover table-striped\\\"\\r\\n              *ngIf=\\\"groupReq.groupBy == 'Day' && finalBills.length > 0\\\">\\r\\n              <table style=\\\"width: 100%;table-layout: fixed;\\\">\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>Bill.no</th>\\r\\n                    <th>Date</th>\\r\\n                    <th>Total</th>\\r\\n                    <th>Action</th>\\r\\n                    <th></th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                  <ng-container *ngFor=\\\"let bill of finalBills\\\">\\r\\n                    <tr>\\r\\n                      <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                        {{ bill.id }}\\r\\n                      </td>\\r\\n                      <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                        {{ bill.createdDate | date }}\\r\\n                      </td>\\r\\n                      <td (click)=\\\"openPopup(bill, billContent)\\\">\\r\\n                        {{ bill.total }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"edit(bill)\\\">\\r\\n                          Edit\\r\\n                          <i class=\\\"fa  fa-edit\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <button class=\\\"btn btn-sm \\\" type=\\\"submit\\\" (click)=\\\"delete(bill)\\\">\\r\\n                          Delete\\r\\n                          <i class=\\\"fa  fa-trash\\\" style=\\\"font-size: 10px;\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        </button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"pt-5 pl-5\\\" *ngIf=\\\"groupByData.length == 0\\\">\\r\\n      <h3>\\r\\n        No data available!\\r\\n      </h3>\\r\\n    </div>\\r\\n\\r\\n    <!-- <div\\r\\n      class=\\\"pt-5 pl-5\\\"\\r\\n      *ngIf=\\\"groupReq.groupBy == 'Day' && finalBills.length == 0\\\"\\r\\n    >\\r\\n      <h3>No bills available on {{ this.groupReq.fromDate | date }}!</h3>\\r\\n    </div> -->\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #billContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\">Bill</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div id=\\\"print-section\\\">\\r\\n        <div style=\\\"text-align: center;\\\">\\r\\n          <small>NATURAL FRESH</small><br />\\r\\n          <small>SRI YOGESHWARA ENTERPRISE</small><br />\\r\\n          <small>TAX INVOICE #{{ popupContent.id }}</small><br />\\r\\n          <small>YELLAMMAGUTTA, NZB</small><br />\\r\\n        </div>\\r\\n        <hr />\\r\\n        <div style=\\\"display: inline;\\\">\\r\\n          <div style=\\\"float: left;\\\">\\r\\n            <p *ngIf=\\\"popupContent?.contact?.name\\\">\\r\\n              <small>Name: {{ popupContent.contact.name }}</small>\\r\\n            </p>\\r\\n            <p>\\r\\n              <small>Date:{{ popupContent.createdDate | date }},{{\\r\\n                  popupContent.createdDate | date: \\\"h:mm:ss a\\\"\\r\\n                }}</small>\\r\\n            </p>\\r\\n          </div>\\r\\n          <div style=\\\"float: right;\\\">\\r\\n            <p *ngIf=\\\"popupContent?.contact?.phone?.length >= 10\\\">\\r\\n              <small>Phone: {{ popupContent.contact.phone }}</small>\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <table class=\\\"table table-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Name</th>\\r\\n                <th>Qty</th>\\r\\n                <th>Price</th>\\r\\n                <th>Disc(%)</th>\\r\\n                <th>Total</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let item of popupContent.items; let i = index\\\">\\r\\n                <td>\\r\\n                  {{ item.product.name }}({{ item.product.category.name }})\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.quantity }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.price }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.discount }}\\r\\n                </td>\\r\\n                <td>\\r\\n                  {{ item.total }}\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr *ngIf=\\\"popupContent.totalDiscount\\\">\\r\\n                <td colspan=\\\"4\\\">\\r\\n                  <b>Assitional Discount</b>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <b>{{ popupContent.totalDiscount }}</b>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"4\\\">\\r\\n                  <b>Total</b>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <b>{{ popupContent.total }}</b>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <span *ngIf=\\\"popupContent.paymentMode\\\">\\r\\n            <hr />\\r\\n            Payment Mode : {{ popupContent?.paymentMode }}</span>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center;\\\">\\r\\n          <hr />\\r\\n          <small>THANK YOU! VISIT AGAIN</small>\\r\\n          <hr />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" printSectionId=\\\"print-section\\\" [printStyle]=\\\"{\\r\\n          div: { 'margin-left': '-5px', 'margin-right': '-5px' }\\r\\n        }\\\" ngxPrint>\\r\\n        Print\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close('Close click')\\\">\\r\\n        Close\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReportComponent } from './report.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportRoutingModule { }\n","export default \"/* .table-hover:hover{\\r\\n    background-color: #dee2e6;\\r\\n} */\\r\\n/* Modal Header */\\r\\n.modal-header {\\r\\n    background-color: #343a40;\\r\\n    color: white;\\r\\n  }\\r\\n/* Modal Body */\\r\\n.modal-body {padding: 2px 16px;}\\r\\n/* Modal Footer */\\r\\n.modal-footer {\\r\\n    background-color: #343a40;\\r\\n    color: white;\\r\\n  }\\r\\n/* Modal Content */\\r\\n.modal-content {\\r\\n    position: relative;\\r\\n    margin: auto;\\r\\n    padding: 0;\\r\\n    border: 1px solid #888;\\r\\n    width: 100%;\\r\\n    -webkit-animation-name: animatetop;\\r\\n            animation-name: animatetop;\\r\\n    -webkit-animation-duration: 0.4s;\\r\\n            animation-duration: 0.4s\\r\\n  }\\r\\n/* Add Animation */\\r\\n@-webkit-keyframes animatetop {\\r\\n    from {top: -300px; opacity: 0}\\r\\n    to {top: 0; opacity: 1}\\r\\n  }\\r\\n@keyframes animatetop {\\r\\n    from {top: -300px; opacity: 0}\\r\\n    to {top: 0; opacity: 1}\\r\\n  }\\r\\ntable\\r\\n{\\r\\n    margin: 10px 0;\\r\\n    width: 100%;\\r\\n}\\r\\n.card-hover:hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n.panel-head{\\r\\n  display: block;\\r\\n  margin-top:5px ;\\r\\n  width:100%;\\r\\n  border: 1px solid black\\r\\n}\\r\\n.btn{\\r\\n  font-size: 1rem;\\r\\n  border-radius: 20px;\\r\\n  border: 1px solid yellowgreen ;\\r\\n  background-color: inherit;\\r\\n  color: currentColor;\\r\\n}\\r\\n.btn:hover{\\r\\n  background-color:greenyellow ;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvcmVwb3J0L3JlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsaUJBQWlCO0FBQ2pCO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDtBQUVBLGVBQWU7QUFDZixhQUFhLGlCQUFpQixDQUFDO0FBRS9CLGlCQUFpQjtBQUNqQjtJQUNFLHlCQUF5QjtJQUN6QixZQUFZO0VBQ2Q7QUFFQSxrQkFBa0I7QUFDbEI7SUFDRSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFVBQVU7SUFDVixzQkFBc0I7SUFDdEIsV0FBVztJQUNYLGtDQUEwQjtZQUExQiwwQkFBMEI7SUFDMUIsZ0NBQXVCO1lBQXZCO0VBQ0Y7QUFFQSxrQkFBa0I7QUFDbEI7SUFDRSxNQUFNLFdBQVcsRUFBRSxVQUFVO0lBQzdCLElBQUksTUFBTSxFQUFFLFVBQVU7RUFDeEI7QUFIQTtJQUNFLE1BQU0sV0FBVyxFQUFFLFVBQVU7SUFDN0IsSUFBSSxNQUFNLEVBQUUsVUFBVTtFQUN4QjtBQUNBOztJQUVFLGNBQWM7SUFDZCxXQUFXO0FBQ2Y7QUFDQTtFQUNFLGVBQWU7QUFDakI7QUFDQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0VBQ2YsVUFBVTtFQUNWO0FBQ0Y7QUFDQTtFQUNFLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsOEJBQThCO0VBQzlCLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF5b3V0L3JlcG9ydC9yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC50YWJsZS1ob3Zlcjpob3ZlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNkZWUyZTY7XHJcbn0gKi9cclxuLyogTW9kYWwgSGVhZGVyICovXHJcbi5tb2RhbC1oZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICB9XHJcbiAgXHJcbiAgLyogTW9kYWwgQm9keSAqL1xyXG4gIC5tb2RhbC1ib2R5IHtwYWRkaW5nOiAycHggMTZweDt9XHJcbiAgXHJcbiAgLyogTW9kYWwgRm9vdGVyICovXHJcbiAgLm1vZGFsLWZvb3RlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuICBcclxuICAvKiBNb2RhbCBDb250ZW50ICovXHJcbiAgLm1vZGFsLWNvbnRlbnQge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGFuaW1hdGlvbi1uYW1lOiBhbmltYXRldG9wO1xyXG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjRzXHJcbiAgfVxyXG4gIFxyXG4gIC8qIEFkZCBBbmltYXRpb24gKi9cclxuICBAa2V5ZnJhbWVzIGFuaW1hdGV0b3Age1xyXG4gICAgZnJvbSB7dG9wOiAtMzAwcHg7IG9wYWNpdHk6IDB9XHJcbiAgICB0byB7dG9wOiAwOyBvcGFjaXR5OiAxfVxyXG4gIH1cclxuICB0YWJsZVxyXG57XHJcbiAgICBtYXJnaW46IDEwcHggMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5jYXJkLWhvdmVyOmhvdmVye1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4ucGFuZWwtaGVhZHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tdG9wOjVweCA7XHJcbiAgd2lkdGg6MTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFja1xyXG59XHJcbi5idG57XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgeWVsbG93Z3JlZW4gO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcclxufVxyXG5cclxuLmJ0bjpob3ZlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOmdyZWVueWVsbG93IDtcclxufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { ItemModel } from \"../item/item.component.model\";\nimport { URLConstants } from \"src/app/constants/url-constants\";\nimport {\n  NgbModalRef,\n  NgbModal,\n  ModalDismissReasons\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { StorageService } from \"src/app/services/storage.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-report\",\n  templateUrl: \"./report.component.html\",\n  styleUrls: [\"./report.component.css\"]\n})\nexport class ReportComponent implements OnInit {\n  public orderList: Array<any> = [];\n  public URL = new URLConstants();\n  public popupContent: any = {};\n  public cardTable: any = [];\n  public groupByData: any = [];\n  public valueByData: any = [];\n  public finalBills: Array<any> = [];\n  public valueByData2: any = [];\n  public showTable: string = \"\";\n  public chooseDays: any = [\"Day\", \"Month\", \"Year\"];\n  public choosePrePopulateDays: any = [\"Current week\", \"Current month\", \"Current year\", \"Manual\"];\n  public choosenDay: string = \"Day\";\n  public getBillURLData = {};\n  public months: Array<string> = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n  ];\n  public groupReq: any = {\n    fromDate: \"\",\n    groupBy: \"\",\n    toDate: \"\"\n  };\n  private modalRef: NgbModalRef;\n  public closeResult = \"\";\n  constructor(\n    public router: Router,\n    private http: HttpService,\n    private modalService: NgbModal,\n    private storageService: StorageService\n  ) { }\n\n  ngOnInit() {\n    this.groupReq.groupBy = \"Day\";\n    this.setCurrentDates();\n    // let date = new Date();\n\n    // let day = date.getDate();\n    // let month = date.getMonth() + 1;\n    // let year = date.getFullYear();\n\n    // if (month < 10) {\n    //   month = 0 + month;\n    // }\n    // if (day < 10) day = 0 + day;\n\n    // var today = year + \"-\" + month + \"-\" + day;\n\n    this.getTotalData();\n  }\n  public setCurrentDates() {\n    this.groupReq.fromDate = new Date().toISOString().substring(0, 10);\n    this.groupReq.toDate = new Date().toISOString().substring(0, 10);\n  }\n\n  public getTotalData() {\n    this.finalBills = [];\n    this.http\n      .get(\n        this.URL.ReportByGroup +\n        this.groupReq.fromDate +\n        \"&groupBy=\" +\n        this.groupReq.groupBy +\n        \"&toDate=\" +\n        this.groupReq.toDate\n      )\n      .subscribe(resp => {\n        this.groupByData = resp as any;\n      });\n  }\n\n  public valueBy1(data: any) {\n    this.valueByData2 = [];\n    this.finalBills = [];\n    console.log(data);\n    let reqUrl: string = \"\";\n    if (data.type == \"day\") {\n      this.getDateBills(data);\n      this.showTable = \"cardBody1\";\n    } else if (data.type == \"month\") {\n      document.body.style.cursor = \"progress\";\n      reqUrl =\n        this.URL.ReportByValue +\n        data.value +\n        \"&month=\" +\n        data.month +\n        \"&type=\" +\n        data.type +\n        \"&year=\" +\n        data.year +\n        \"&fromDate=\" +\n        this.groupReq.fromDate +\n        \"&toDate=\" +\n        this.groupReq.toDate;\n      this.http.get(reqUrl).subscribe(resp => {\n        this.valueByData2 = resp as any;\n        document.body.style.cursor = \"default\";\n      });\n    }\n  }\n  public groupBy(data: any) {\n    this.valueByData = [];\n    this.valueByData2 = [];\n    this.finalBills = [];\n    console.log(data);\n    if (data.type == \"day\") {\n      this.getDateBills(data);\n    } else {\n      let reqUrl: string = \"\";\n      reqUrl =\n        this.URL.ReportByValue +\n        data.value +\n        \"&month=\" +\n        data.month +\n        \"&type=\" +\n        data.type +\n        \"&year=\" +\n        data.year +\n        \"&fromDate=\" +\n        this.groupReq.fromDate +\n        \"&toDate=\" +\n        this.groupReq.toDate;\n      this.http.get(reqUrl).subscribe(resp => {\n        this.valueByData = resp as any;\n      });\n    }\n  }\n\n  public valueBy2(data: any) {\n    this.showTable = \"cardBody2\";\n    this.getDateBills(data);\n  }\n\n  public getDateBills(data: any): any {\n    this.finalBills = [];\n    this.getBillURLData = data;\n    let reqUrl =\n      this.URL.ReportGetBills +\n      data.month +\n      \"&value=\" +\n      data.value +\n      \"&year=\" +\n      data.year;\n    this.http.get(reqUrl).subscribe(resp => {\n      this.finalBills = resp as any;\n    });\n  }\n\n  public delete(order: any) {\n    if (window.confirm(\"Do you want to delete the bill?\")) {\n      this.http.delete(this.URL.OrderDelete + order.id).subscribe(resp => {\n        this.getDateBills(this.getBillURLData);\n        //this.filterData(date);\n        window.alert(\"Bill deleted successfully\");\n      });\n    }\n  }\n\n  public edit(order: any) {\n    this.storageService.orderId = order.id;\n    this.router.navigate([\"layout/bill\"]);\n  }\n\n  public openPopup(order, billContent) {\n    this.popupContent = order;\n    this.open(billContent);\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(content: any) {\n    this.modalRef = this.modalService.open(content);\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  // public setToDate() {\n  //   let temp = new Date(this.groupReq.fromDate);\n\n  //   this.groupReq.toDate = temp;\n  // }\n\n  public setDates() {\n    this.setCurrentDates();\n    if (this.choosenDay == this.choosePrePopulateDays[0]) {\n      //week\n      var now = new Date();\n      var firstDayOfWeek = new Date(\n        now.setDate(now.getDate() - now.getDay())\n      );\n\n      this.groupReq.fromDate = firstDayOfWeek.toISOString().substring(0, 10);\n    } else if (this.choosenDay == this.choosePrePopulateDays[1]) {\n      //month\n      //new Date(date.getFullYear(), date.getMonth(), 1)\n      this.groupReq.fromDate = new Date(\n        new Date().getFullYear(),\n        new Date().getMonth(),\n        2\n      )\n        .toISOString()\n        .substring(0, 10);\n    } else if (this.choosenDay == this.choosePrePopulateDays[2]) {\n      //year\n      new Date().toISOString().substring(0, 10);\n      this.groupReq.fromDate = new Date(new Date().getFullYear(), 0, 2)\n        .toISOString()\n        .substring(0, 10);\n    } else {\n      this.groupReq.fromDate = '';\n      this.groupReq.toDate = '';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportRoutingModule } from './report-routing.module';\nimport { ReportComponent } from './report.component';\nimport { NgxPrintModule } from 'ngx-print';\nimport { FormsModule } from '@angular/forms';\nimport { NgbCollapse } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [ReportComponent],\n  imports: [\n    CommonModule,\n    ReportRoutingModule,\n    FormsModule,\n    NgxPrintModule\n  ]\n})\nexport class ReportModule { }\n"]}