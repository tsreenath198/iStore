{"version":3,"sources":["item-item-module-es5.js","webpack:///src/app/components/layout/item/item.component.html","webpack:///src/app/components/layout/item/item-routing.module.ts","webpack:///src/app/components/layout/item/item.component.css","webpack:///src/app/components/layout/item/item.component.ts","webpack:///src/app/components/layout/item/item.module.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"item-item-module\"],{\n\n/***/ \"./node_modules/raw-loader/dist/cjs.js!./src/app/components/layout/item/item.component.html\":\n/*!**************************************************************************************************!*\\\n  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/components/layout/item/item.component.html ***!\n  \\**************************************************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<!-- <combo-box [dataList]=\\\"datalistEx\\\" [columnName]=\\\"'name'\\\"></combo-box> -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\" style=\\\"height: 90vh; background-color: #343a40;overflow-y: scroll;\\\">\\n        <form #form=\\\"ngForm\\\" id=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"row p-3\\\">\\n                <div class=\\\"col-md-12 clearfix\\\">\\n                    <div class=\\\"float-left form-group\\\">\\n                        <input type=\\\"text\\\" id=\\\"cname\\\" name=\\\"cname\\\" placeholder=\\\"Name\\\" minlength=\\\"3\\\" #cname=\\\"ngModel\\\" (change)=\\\"onChange()\\\" (blur)=\\\"onChange()\\\" list=\\\"id-list\\\" pattern=\\\"[A-Za-z]\\\" [(ngModel)]=\\\"customerDetails.name\\\" value=\\\"{{ customerDetails.name }}\\\" ngModel />\\n                        <datalist id=\\\"id-list\\\">\\n                            <option *ngFor=\\\"let customer of customerList; let i = index\\\" [value]=\\\"customer.name \\\">{{\\n                                customer.phone }}\\n                            </option>\\n                        </datalist>\\n                    </div>\\n                    <div class=\\\"float-right\\\">\\n                        <input type=\\\"text\\\" placeholder=\\\"Phone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"customerDetails.phone\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            <table class=\\\"table table-dark table-sm table-striped istore-table\\\">\\n                <thead>\\n                    <tr>\\n                        <th></th>\\n                        <th>Name</th>\\n                        <th>Qty</th>\\n                        <th>Price</th>\\n                        <th>Discount(%)</th>\\n                        <th>Total</th>\\n                    </tr>\\n                </thead>\\n                <tbody *ngIf=\\\"itemList.length\\\">\\n                    <tr *ngFor=\\\"let item of itemList; let i = index\\\">\\n                        <td style=\\\"position: relative;cursor: pointer;\\\" (click)=\\\"removeItemFromBill(i)\\\">\\n                            <span style=\\\"color: greenyellow; margin: 0;\\n          font-size: 15px ;\\n        position: relative;\\n        margin-top: 50%;\\\">\\n                                <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\"></i></span>\\n                        </td>\\n                        <td>\\n                            <p>{{ item.product.name }}({{ item.product.category.name }})</p>\\n                        </td>\\n                        <td>\\n                            <div>\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quantity_{{i}}\\\" min=\\\"1\\\" [(ngModel)]=\\\"item.quantity\\\" (change)=\\\"setTotal(item)\\\" />\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <p>{{ item.price }}</p>\\n                        </td>\\n                        <td>\\n                            <div>\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"discount\\\" [(ngModel)]=\\\"item.discount\\\" step=\\\"5\\\" max=\\\"100\\\" min=\\\"0\\\" (change)=\\\"setTotal(item)\\\" />\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <p>{{ item.total }}</p>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan=\\\"5\\\">\\n                            <p><b>Add discount</b></p>\\n                        </td>\\n                        <td>\\n                            <div style=\\\"width:50px\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"totalDiscount\\\" [(ngModel)]=\\\"totalDiscount\\\" (blur)=\\\"calculateDiscount()\\\" />\\n                            </div>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan=\\\"5\\\">\\n                            <p><b>Total</b></p>\\n                        </td>\\n                        <td>\\n                            <p>\\n                                <b>{{ totalBill }}</b>\\n                            </p>\\n                        </td>\\n                    </tr>\\n                    <tr *ngIf=\\\"itemList.length\\\">\\n                        <td colspan=\\\"3\\\">\\n                            <button class=\\\"btn\\\" style=\\\"float: right;\\\" (click)=\\\"cancelBill()\\\">\\n                                Cancel\\n                            </button>\\n                        </td>\\n                        <td colspan=\\\"1\\\">\\n                            <button class=\\\"btn\\\" style=\\\"float: right;\\\" *ngIf=\\\"!updateMode\\\" (click)=\\\"setPrintingBill(paymentModeContent)\\\">\\n                                Generate\\n                            </button>\\n                            <button class=\\\"btn\\\" style=\\\"float: right;\\\" *ngIf=\\\"updateMode\\\" (click)=\\\"update(billContent)\\\">\\n                                Update\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n    <div class=\\\"col-md-7 item-view-pane\\\">\\n        <nav class=\\\"nav nav-tabs\\\">\\n            <li class=\\\"nav-item\\\" *ngFor=\\\"let cat of categoryList\\\">\\n                <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"!cat.activeStatus\\\" [ngClass]=\\\"{ active: selectedCategory == cat.name }\\\" (click)=\\\"filter(cat.id, cat.name)\\\">{{ cat.name\\n                    }}\\n                </a>\\n            </li>\\n        </nav>\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let product of productList\\\" class=\\\"col-md-2 p-1\\\" id=\\\"productsInBill\\\" [hidden]=\\\"\\n          (product.category.rawMaterial && !product?.inventory) ||\\n          product.activeStatus ||\\n          product.category.activeStatus\\n        \\\" [ngClass]=\\\"{\\n          'text-red': product.inventory < product.minimumAvailability\\n        }\\\" (click)=\\\"addToList(product)\\\">\\n                <b>\\n                    <h5>{{ product.name }}</h5>\\n                </b>\\n                <b><small>({{ selectedCategory }})</small></b>\\n                <b>\\n                    <p>{{ product.price }}.rs</p>\\n                </b>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #billContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Bill</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div id=\\\"print-section\\\" style=\\\"margin: 2;\\\">\\n                <div style=\\\"text-align: center;\\\">\\n                    <small>NATURAL FRESH ICE CREAMS</small><br />\\n                    <small>SRI YOGESHWARA ENTERPRISE</small><br />\\n                    <small>TAX INVOICE #{{ printingBill.id + 1 }}</small>\\n                    <br />\\n                    <small>YELLAMMAGUTTA, NZB</small><br />\\n                </div>\\n                <hr />\\n                <div style=\\\"display: inline;\\\">\\n                    <div style=\\\"float: left;\\\">\\n                        <p *ngIf=\\\"printingBill?.contact?.name\\\">\\n                            <small>Name: {{ printingBill.contact.name }}</small>\\n                        </p>\\n                        <p>\\n                            <small>Date:{{ printingBill.date | date }},{{\\n                                printingBill.date | date: \\\"h:mm:ss a\\\"\\n                                }}</small>\\n                        </p>\\n                    </div>\\n                    <div style=\\\"float: right;\\\">\\n                        <p *ngIf=\\\"printingBill?.contact?.phone?.length >= 10\\\">\\n                            <small>Phone: {{ printingBill.contact.phone }}</small>\\n                        </p>\\n                    </div>\\n                </div>\\n                <div>\\n                    <table class=\\\"table table-sm\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Name</th>\\n                                <th>Qty</th>\\n                                <th>Price</th>\\n                                <th>Disc(%)</th>\\n                                <th>Total</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody *ngIf=\\\"itemList.length\\\">\\n                            <tr *ngFor=\\\"let item of printingBill.items; let i = index\\\">\\n                                <td>\\n                                    {{ item.product.name }}({{ item.product.category.name }})\\n                                </td>\\n                                <td>\\n                                    {{ item.quantity }}\\n                                </td>\\n                                <td>\\n                                    {{ item.price }}\\n                                </td>\\n                                <td>\\n                                    {{ item.discount }}\\n                                </td>\\n                                <td>\\n                                    {{ item.total }}\\n                                </td>\\n                            </tr>\\n                            <tr *ngIf=\\\"printingBill.totalDiscount\\\">\\n                                <td colspan=\\\"4\\\">\\n                                    <b>Additional Discount</b>\\n                                </td>\\n                                <td>\\n                                    <b>{{ printingBill.totalDiscount }}</b>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td colspan=\\\"4\\\">\\n                                    <b>Total</b>\\n                                </td>\\n                                <td>\\n                                    <b>{{ printingBill.total }}</b>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n\\n                    <hr />\\n                    <span>Payment Mode : {{ printingBill.paymentMode }}</span>\\n                </div>\\n                <div style=\\\"text-align: center;\\\">\\n                    <hr />\\n                    <small>THANK YOU! VISIT AGAIN</small>\\n                    <hr />\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" printSectionId=\\\"print-section\\\" [printStyle]=\\\"{\\n          div: { 'margin-left': '-5px', 'margin-right': '-5px' }\\n        }\\\" (click)=\\\"generateBill()\\\" ngxPrint>\\n                Print\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close('Close click')\\\">\\n                Close\\n            </button>\\n        </div>\\n    </div>\\n</ng-template>\\n<ng-template #paymentModeContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Choose Payment Mode</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"p-3\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <select id=\\\"payMode\\\" class=\\\"form-control\\\" name=\\\"pm\\\" [(ngModel)]=\\\"paymentMode\\\" #pm=\\\"ngModel\\\" required>\\n                            <option [ngValue]=\\\"undefined\\\" hidden selected>\\n                                Payment Mode <label class=\\\"required\\\" for=\\\"pm\\\">*</label>\\n                            </option>\\n                            <option *ngFor=\\\"let cl of paymentTypes\\\">{{ cl }} </option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <select id=\\\"ordertype\\\" class=\\\"form-control\\\" name=\\\"ot\\\" [(ngModel)]=\\\"orderType\\\" #ot=\\\"ngModel\\\" required>\\n                            <option [ngValue]=\\\"undefined\\\" hidden selected>\\n                                Order Type <label class=\\\"required\\\" for=\\\"ot\\\">*</label>\\n                            </option>\\n                            <option *ngFor=\\\"let ot of orderTypes\\\">{{ ot }} </option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"invoicedt\\\" [(ngModel)]=\\\"invoiceDate\\\" #invoicedt=\\\"ngModel\\\" required>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-12\\\" *ngIf=\\\"paymentMode == 'Cash'\\\">\\n                    <table>\\n                        <tr>\\n                            <td>\\n                                <h3>Total:</h3>\\n                            </td>\\n                            <td>\\n                                <h5>{{ totalBill }}</h5>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>\\n                                <h3>Given:</h3>\\n                            </td>\\n                            <td>\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"color: black;\\\" (keyup)=\\\"calculateBill($event)\\\" />\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>\\n                                <h3>Return:</h3>\\n                            </td>\\n                            <td>\\n                                <h5>{{ giveAmount }}</h5>\\n                            </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [disabled]=\\\"!paymentMode\\\" (click)=\\\"proceedToPrint(billContent)\\\">\\n                Next\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close('Close click')\\\">\\n                Close\\n            </button>\\n        </div>\\n    </div>\\n</ng-template>\");\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/item/item-routing.module.ts\":\n/*!***************************************************************!*\\\n  !*** ./src/app/components/layout/item/item-routing.module.ts ***!\n  \\***************************************************************/\n/*! exports provided: ItemRoutingModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemRoutingModule\", function() { return ItemRoutingModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ \"./node_modules/@angular/router/fesm2015/router.js\");\n/* harmony import */ var _item_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./item.component */ \"./src/app/components/layout/item/item.component.ts\");\n\n\n\n\nconst routes = [\n    {\n        path: \"\",\n        component: _item_component__WEBPACK_IMPORTED_MODULE_3__[\"ItemComponent\"]\n    }\n];\nlet ItemRoutingModule = class ItemRoutingModule {\n};\nItemRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"].forChild(routes)],\n        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"]]\n    })\n], ItemRoutingModule);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/item/item.component.css\":\n/*!***********************************************************!*\\\n  !*** ./src/app/components/layout/item/item.component.css ***!\n  \\***********************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\".istore-table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ninput[type='text'],input[type='number'] {\\r\\n  margin-top: 0px;\\r\\n  font-size: 1rem;\\r\\n  border: 0;\\r\\n  border-bottom: 2px solid greenyellow;\\r\\n  background-color: inherit;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ninput[type='date'] {\\r\\n  margin-top: 0px;\\r\\n  font-size: 1rem;\\r\\n  border: 0;\\r\\n  border-bottom: 2px solid greenyellow;\\r\\n  background-color: inherit;\\r\\n}\\r\\n\\r\\ninput[type='text']:focus,input[type='number']:focus {\\r\\n  background-color: inherit;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nselect :focus {\\r\\n  background-color: inherit;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nselect {\\r\\n  font-size: 1rem;\\r\\n  border: 0;\\r\\n  border-bottom: 2px solid greenyellow;\\r\\n  background-color: inherit;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.item-view-pane {\\r\\n  background-color: #343a40;\\r\\n  color: white;\\r\\n  height: 90vh;\\r\\n  margin-left: -16px;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.istore-table p {\\r\\n  font-size: 1rem;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n/* Modal Header */\\r\\n\\r\\n.modal-header {\\r\\n  background-color: #343a40;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/* Modal Body */\\r\\n\\r\\n.modal-body {\\r\\n  padding: 2px 16px;\\r\\n}\\r\\n\\r\\n/* Modal Footer */\\r\\n\\r\\n.modal-footer {\\r\\n  background-color: #343a40;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/* Modal Content */\\r\\n\\r\\n.modal-content {\\r\\n  position: relative;\\r\\n  margin: auto;\\r\\n  padding: 0;\\r\\n  border: 1px solid #888;\\r\\n  width: 100%;\\r\\n  -webkit-animation-name: animatetop;\\r\\n          animation-name: animatetop;\\r\\n  -webkit-animation-duration: 0.4s;\\r\\n          animation-duration: 0.4s\\r\\n}\\r\\n\\r\\n/* Add Animation */\\r\\n\\r\\n@-webkit-keyframes animatetop {\\r\\n  from {\\r\\n    top: -300px;\\r\\n    opacity: 0\\r\\n  }\\r\\n\\r\\n  to {\\r\\n    top: 0;\\r\\n    opacity: 1\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes animatetop {\\r\\n  from {\\r\\n    top: -300px;\\r\\n    opacity: 0\\r\\n  }\\r\\n\\r\\n  to {\\r\\n    top: 0;\\r\\n    opacity: 1\\r\\n  }\\r\\n}\\r\\n\\r\\n.nav-tabs .nav-item.show .nav-link,\\r\\n.nav-tabs .nav-link.active {\\r\\n  background-color: #343a40;\\r\\n  color: #fff;\\r\\n  border-color: #dee2e6 #dee2e6 #fff;\\r\\n  border-bottom: 0;\\r\\n}\\r\\n\\r\\n.required {\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  font-size: 1rem;\\r\\n  border-radius: 20px;\\r\\n  border: 1px solid yellowgreen;\\r\\n  background-color: inherit;\\r\\n  color: currentColor;\\r\\n}\\r\\n\\r\\n.btn:hover {\\r\\n  background-color: greenyellow;\\r\\n}\\r\\n\\r\\n.text-red {\\r\\n  color: tomato;\\r\\n}\\r\\n\\r\\n#productsInBill{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n#productsInBill :hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.alert-danger{\\r\\n  color:red;\\r\\n  background-color: transparent;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvaXRlbS9pdGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZUFBZTtFQUNmLFNBQVM7RUFDVCxvQ0FBb0M7RUFDcEMseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFDQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsU0FBUztFQUNULG9DQUFvQztFQUNwQyx5QkFBeUI7QUFDM0I7O0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7RUFDZixTQUFTO0VBQ1Qsb0NBQW9DO0VBQ3BDLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBSUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUEsaUJBQWlCOztBQUNqQjtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBRUEsZUFBZTs7QUFDZjtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQSxpQkFBaUI7O0FBQ2pCO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQSxrQkFBa0I7O0FBQ2xCO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxrQ0FBMEI7VUFBMUIsMEJBQTBCO0VBQzFCLGdDQUF1QjtVQUF2QjtBQUNGOztBQUVBLGtCQUFrQjs7QUFDbEI7RUFDRTtJQUNFLFdBQVc7SUFDWDtFQUNGOztFQUVBO0lBQ0UsTUFBTTtJQUNOO0VBQ0Y7QUFDRjs7QUFWQTtFQUNFO0lBQ0UsV0FBVztJQUNYO0VBQ0Y7O0VBRUE7SUFDRSxNQUFNO0lBQ047RUFDRjtBQUNGOztBQUVBOztFQUVFLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsa0NBQWtDO0VBQ2xDLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBQ0E7RUFDRSxlQUFlO0FBQ2pCOztBQUNBO0VBQ0UsU0FBUztFQUNULDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF5b3V0L2l0ZW0vaXRlbS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlzdG9yZS10YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9J3RleHQnXSxpbnB1dFt0eXBlPSdudW1iZXInXSB7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZWVueWVsbG93O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbmlucHV0W3R5cGU9J2RhdGUnXSB7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZWVueWVsbG93O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuaW5wdXRbdHlwZT0ndGV4dCddOmZvY3VzLGlucHV0W3R5cGU9J251bWJlciddOmZvY3VzIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuc2VsZWN0IDpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbnNlbGVjdCB7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGJvcmRlcjogMDtcclxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JlZW55ZWxsb3c7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcblxyXG5cclxuLml0ZW0tdmlldy1wYW5lIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDkwdmg7XHJcbiAgbWFyZ2luLWxlZnQ6IC0xNnB4O1xyXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcclxufVxyXG5cclxuLmlzdG9yZS10YWJsZSBwIHtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcblxyXG4vKiBNb2RhbCBIZWFkZXIgKi9cclxuLm1vZGFsLWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qIE1vZGFsIEJvZHkgKi9cclxuLm1vZGFsLWJvZHkge1xyXG4gIHBhZGRpbmc6IDJweCAxNnB4O1xyXG59XHJcblxyXG4vKiBNb2RhbCBGb290ZXIgKi9cclxuLm1vZGFsLWZvb3RlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qIE1vZGFsIENvbnRlbnQgKi9cclxuLm1vZGFsLWNvbnRlbnQge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGFuaW1hdGlvbi1uYW1lOiBhbmltYXRldG9wO1xyXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC40c1xyXG59XHJcblxyXG4vKiBBZGQgQW5pbWF0aW9uICovXHJcbkBrZXlmcmFtZXMgYW5pbWF0ZXRvcCB7XHJcbiAgZnJvbSB7XHJcbiAgICB0b3A6IC0zMDBweDtcclxuICAgIG9wYWNpdHk6IDBcclxuICB9XHJcblxyXG4gIHRvIHtcclxuICAgIHRvcDogMDtcclxuICAgIG9wYWNpdHk6IDFcclxuICB9XHJcbn1cclxuXHJcbi5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssXHJcbi5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlci1jb2xvcjogI2RlZTJlNiAjZGVlMmU2ICNmZmY7XHJcbiAgYm9yZGVyLWJvdHRvbTogMDtcclxufVxyXG5cclxuLnJlcXVpcmVkIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uYnRuIHtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCB5ZWxsb3dncmVlbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xyXG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbn1cclxuXHJcbi5idG46aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVueWVsbG93O1xyXG59XHJcblxyXG4udGV4dC1yZWQge1xyXG4gIGNvbG9yOiB0b21hdG87XHJcbn1cclxuXHJcbiNwcm9kdWN0c0luQmlsbHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuI3Byb2R1Y3RzSW5CaWxsIDpob3ZlcntcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLmFsZXJ0LWRhbmdlcntcclxuICBjb2xvcjpyZWQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn0iXX0= */\");\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/item/item.component.ts\":\n/*!**********************************************************!*\\\n  !*** ./src/app/components/layout/item/item.component.ts ***!\n  \\**********************************************************/\n/*! exports provided: ItemComponent */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemComponent\", function() { return ItemComponent; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var src_app_services_http_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/http.service */ \"./src/app/services/http.service.ts\");\n/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ \"./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js\");\n/* harmony import */ var src_app_constants_url_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/constants/url-constants */ \"./src/app/constants/url-constants.ts\");\n/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ \"./node_modules/ngx-toastr/fesm2015/ngx-toastr.js\");\n/* harmony import */ var src_app_services_storage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/storage.service */ \"./src/app/services/storage.service.ts\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ \"./node_modules/@angular/forms/fesm2015/forms.js\");\n\n\n\n\n\n\n\n\nlet ItemComponent = class ItemComponent {\n    constructor(storageService, http, modalService, toastr) {\n        this.storageService = storageService;\n        this.http = http;\n        this.modalService = modalService;\n        this.toastr = toastr;\n        this.productList = [];\n        this.filterProductList = [];\n        this.itemList = [];\n        this.customerDetails = {};\n        this.selectedItem = {};\n        this.selectedCategory = \"Cup\";\n        this.categoryList = [];\n        this.customerList = [];\n        this.paymentTypes = [\"Cash\", \"Bank\"];\n        this.orderTypes = [\"Store\", \"Zomato\", \"Swiggy\"];\n        this.paymentMode = 'Cash';\n        this.invoiceDate = new Date().toISOString().substring(0, 10);\n        this.orderType = 'Store';\n        this.updateMode = false;\n        this.totalDiscount = 0;\n        this.totalBill = 0.0;\n        this.printingBill = {};\n        this.url = new src_app_constants_url_constants__WEBPACK_IMPORTED_MODULE_4__[\"URLConstants\"]();\n        this.giveAmount = 0;\n        this.closeResult = \"\";\n    }\n    ngOnInit() {\n        this.getCategoryList();\n        this.getProductList();\n        this.getCustomerList();\n        if (this.storageService.orderId) {\n            this.updateMode = true;\n            this.http\n                .get(this.url.OrderGetById + this.storageService.orderId)\n                .subscribe(resp => {\n                let temp = resp;\n                this.itemList = temp.items;\n                this.totalBill = temp.total;\n                this.customerDetails = temp.contact;\n                this.paymentMode = temp.paymentMode;\n                this.invoiceDate = temp.invoiceDate;\n                this.orderType = temp.orderType;\n            });\n        }\n    }\n    getCustomerList() {\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function* () {\n            this.customerList = yield this.http\n                .get(this.url.CustomerGetAll)\n                .toPromise()\n                .then(resp => resp); //Do you own cast here\n            return this.customerList;\n        });\n    }\n    getProductList() {\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function* () {\n            this.productList = yield this.http\n                .get(this.url.ProductGetAll)\n                .toPromise()\n                .then(resp => resp); //Do you own cast here\n            this.filterProductList = this.productList;\n            if (this.filterProductList) {\n                this.setFilter();\n            }\n            return this.productList;\n        });\n    }\n    getCategoryList() {\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function* () {\n            this.categoryList = yield this.http\n                .get(this.url.CategoryGetAll)\n                .toPromise()\n                .then(resp => resp); //Do you own cast here\n            return this.categoryList;\n        });\n    }\n    setFilter() {\n        this.selectedCategory = \"Cup\";\n        const item = this.categoryList.filter(item => item.name == this.selectedCategory);\n        this.filter(item[0].id, item[0].name);\n    }\n    addToList(p) {\n        if (p.inventory <= 0) {\n            window.alert(\"Item out of stock!\");\n        }\n        else {\n            let index = this.itemList.findIndex(i => i.product.id === p.id);\n            if (index == -1) {\n                this.itemList.push(this.addToModel(p));\n            }\n            else {\n                this.itemList[index].quantity += 1;\n                this.itemList[index].total = this.calculateSingleItemTotal(this.itemList[index]);\n            }\n            this.calculateOrderTotal(this.itemList);\n        }\n    }\n    addToModel(p) {\n        let bill = {};\n        bill.price = p.price;\n        bill.product = p;\n        if (p.defaultDiscount) {\n            bill.discount = p.defaultDiscount;\n        }\n        else if (p.category.defaultDiscount) {\n            bill.discount = p.category.defaultDiscount;\n        }\n        else {\n            bill.discount = 0;\n        }\n        bill.quantity = 1;\n        bill.total = this.calculateSingleItemTotal(bill);\n        return bill;\n    }\n    calculateSingleItemTotal(p) {\n        return (p.quantity * p.product.price * (100 - p.discount)) / 100;\n    }\n    calculateOrderTotal(p) {\n        this.totalBill = 0;\n        p.forEach(i => (this.totalBill += i.total));\n    }\n    setTotal(p) {\n        p.total = Math.ceil((p.quantity * p.price * (100 - p.discount)) / 100);\n        this.calculateOrderTotal(this.itemList);\n    }\n    generateBill(event) {\n        let finalOrder = {};\n        finalOrder.total = this.printingBill.total;\n        finalOrder.items = this.printingBill.items;\n        if (Object.keys(this.printingBill.contact).length === 0) {\n            finalOrder.contact = null;\n        }\n        else {\n            finalOrder.contact = this.printingBill.contact;\n        }\n        finalOrder.paymentMode = this.printingBill.paymentMode;\n        finalOrder.invoiceDate = this.printingBill.invoiceDate;\n        finalOrder.totalDiscount = this.printingBill.totalDiscount;\n        finalOrder.orderType = this.printingBill.orderType;\n        this.http.post(finalOrder, this.url.OrderCreate).subscribe(resp => {\n            alert(\"Successfully created\");\n            this.cancelBill();\n            this.form.reset();\n            this.close();\n        });\n    }\n    update() {\n        let finalOrder = {};\n        finalOrder.id = this.storageService.orderId;\n        finalOrder.total = Math.ceil(this.totalBill);\n        finalOrder.items = this.itemList;\n        finalOrder.contact = this.customerDetails;\n        finalOrder.paymentMode = this.paymentMode;\n        finalOrder.invoiceDate = this.invoiceDate;\n        finalOrder.orderType = this.orderType;\n        this.http.update(finalOrder, this.url.OrderUpdate).subscribe(resp => {\n            // this.printingBill=resp as any;\n            // this.setPrintingBill(event);\n            window.alert(\"Updated successfully.\");\n            this.cancelBill();\n            this.updateMode = false;\n            this.storageService.orderId = null;\n        });\n    }\n    openPaymentOption(event) {\n        this.open(event);\n    }\n    proceedToPrint(event) {\n        this.printingBill[\"paymentMode\"] = this.paymentMode;\n        this.printingBill[\"invoiceDate\"] = this.invoiceDate;\n        this.printingBill[\"orderType\"] = this.orderType;\n        this.close();\n        this.open(event);\n    }\n    /**Printing bill model */\n    setPrintingBill(billContent) {\n        this.http.get(this.url.OrderGetId).subscribe(resp => {\n            this.printingBill[\"id\"] = resp;\n        });\n        this.printingBill[\"items\"] = this.itemList;\n        this.printingBill[\"total\"] = Math.ceil(this.totalBill);\n        this.printingBill[\"contact\"] = this.customerDetails;\n        this.printingBill[\"date\"] = new Date();\n        this.printingBill[\"totalDiscount\"] = this.totalDiscount;\n        this.open(billContent);\n    }\n    cancelBill() {\n        this.itemList = [];\n        this.totalBill = 0.0;\n        this.paymentMode = undefined;\n        this.invoiceDate = new Date().toISOString().substring(0, 10);\n        this.orderType = 'Store';\n        if (this.updateMode) {\n            this.updateMode = false;\n        }\n        this.customerDetails = {};\n    }\n    /**Filter */\n    filter(categoryId, categoryName) {\n        this.selectedCategory = categoryName;\n        let temp = [];\n        this.filterProductList.filter(product => {\n            if (categoryId == product.category.id && product.activeStatus == 0) {\n                temp.push(product);\n            }\n        });\n        this.productList = temp;\n    }\n    /**\n     * @param\n     * 1) content consists the modal instance\n     * 2) Selected contains the code of selected row\n     */\n    open(content) {\n        this.modalRef = this.modalService.open(content, { size: 'lg', backdrop: 'static' });\n        this.modalRef.result.then(result => {\n            this.closeResult = `Closed with: ${result}`;\n        }, reason => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n    close() {\n        this.modalRef.close();\n    }\n    getDismissReason(reason) {\n        if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"ModalDismissReasons\"].ESC) {\n            return \"by pressing ESC\";\n        }\n        else if (reason === _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"ModalDismissReasons\"].BACKDROP_CLICK) {\n            return \"by clicking on a backdrop\";\n        }\n        else {\n            return `with: ${reason}`;\n        }\n    }\n    removeItemFromBill(i) {\n        this.itemList.splice(i, 1);\n        this.calculateOrderTotal(this.itemList);\n    }\n    alert() {\n        window.alert(\"Name or Payment mode is empty.\");\n    }\n    calculateBill(event) {\n        this.giveAmount = 0;\n        this.giveAmount = Math.floor(event.target.value - this.totalBill);\n    }\n    calculateDiscount() {\n        if (this.totalDiscount > 0) {\n            this.removeDiscountFromIndividual();\n            let temp = (this.totalBill * this.totalDiscount) / 100;\n            this.totalBill -= Math.ceil(temp);\n        }\n        else if (this.totalDiscount == 0 || this.totalDiscount == null) {\n            this.calculateOrderTotal(this.itemList);\n        }\n    }\n    // Remove individual discount once total discount selected\n    removeDiscountFromIndividual() {\n        this.itemList.map(item => {\n            item.total = item.price;\n            item.discount = 0;\n        });\n        this.calculateOrderTotal(this.itemList);\n    }\n    onChange(details) {\n        this.customerList.forEach((data) => {\n            if (data.name == this.customerDetails.name) {\n                this.customerDetails.phone = data.phone;\n            }\n        });\n    }\n};\nItemComponent.ctorParameters = () => [\n    { type: src_app_services_storage_service__WEBPACK_IMPORTED_MODULE_6__[\"StorageService\"] },\n    { type: src_app_services_http_service__WEBPACK_IMPORTED_MODULE_2__[\"HttpService\"] },\n    { type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_3__[\"NgbModal\"] },\n    { type: ngx_toastr__WEBPACK_IMPORTED_MODULE_5__[\"ToastrService\"] }\n];\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ViewChild\"])(\"form\", { read: _angular_forms__WEBPACK_IMPORTED_MODULE_7__[\"NgForm\"], static: true })\n], ItemComponent.prototype, \"form\", void 0);\nItemComponent = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Component\"])({\n        selector: \"app-item\",\n        template: tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! raw-loader!./item.component.html */ \"./node_modules/raw-loader/dist/cjs.js!./src/app/components/layout/item/item.component.html\")).default,\n        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! ./item.component.css */ \"./src/app/components/layout/item/item.component.css\")).default]\n    })\n], ItemComponent);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/components/layout/item/item.module.ts\":\n/*!*******************************************************!*\\\n  !*** ./src/app/components/layout/item/item.module.ts ***!\n  \\*******************************************************/\n/*! exports provided: ItemModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ItemModule\", function() { return ItemModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ \"./node_modules/@angular/forms/fesm2015/forms.js\");\n/* harmony import */ var _item_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./item.component */ \"./src/app/components/layout/item/item.component.ts\");\n/* harmony import */ var _item_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./item-routing.module */ \"./src/app/components/layout/item/item-routing.module.ts\");\n/* harmony import */ var ngx_print__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-print */ \"./node_modules/ngx-print/fesm2015/ngx-print.js\");\n\n\n\n;\n\n\n\n\nlet ItemModule = class ItemModule {\n};\nItemModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        declarations: [_item_component__WEBPACK_IMPORTED_MODULE_4__[\"ItemComponent\"]],\n        imports: [\n            _angular_common__WEBPACK_IMPORTED_MODULE_2__[\"CommonModule\"],\n            _item_routing_module__WEBPACK_IMPORTED_MODULE_5__[\"ItemRoutingModule\"],\n            ngx_print__WEBPACK_IMPORTED_MODULE_6__[\"NgxPrintModule\"],\n            _angular_forms__WEBPACK_IMPORTED_MODULE_3__[\"FormsModule\"]\n        ]\n    })\n], ItemModule);\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=item-item-module-es2015.js.map","export default \"<!-- <combo-box [dataList]=\\\"datalistEx\\\" [columnName]=\\\"'name'\\\"></combo-box> -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\" style=\\\"height: 90vh; background-color: #343a40;overflow-y: scroll;\\\">\\n        <form #form=\\\"ngForm\\\" id=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"row p-3\\\">\\n                <div class=\\\"col-md-12 clearfix\\\">\\n                    <div class=\\\"float-left form-group\\\">\\n                        <input type=\\\"text\\\" id=\\\"cname\\\" name=\\\"cname\\\" placeholder=\\\"Name\\\" minlength=\\\"3\\\" #cname=\\\"ngModel\\\" (change)=\\\"onChange()\\\" (blur)=\\\"onChange()\\\" list=\\\"id-list\\\" pattern=\\\"[A-Za-z]\\\" [(ngModel)]=\\\"customerDetails.name\\\" value=\\\"{{ customerDetails.name }}\\\" ngModel />\\n                        <datalist id=\\\"id-list\\\">\\n                            <option *ngFor=\\\"let customer of customerList; let i = index\\\" [value]=\\\"customer.name \\\">{{\\n                                customer.phone }}\\n                            </option>\\n                        </datalist>\\n                    </div>\\n                    <div class=\\\"float-right\\\">\\n                        <input type=\\\"text\\\" placeholder=\\\"Phone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"customerDetails.phone\\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            <table class=\\\"table table-dark table-sm table-striped istore-table\\\">\\n                <thead>\\n                    <tr>\\n                        <th></th>\\n                        <th>Name</th>\\n                        <th>Qty</th>\\n                        <th>Price</th>\\n                        <th>Discount(%)</th>\\n                        <th>Total</th>\\n                    </tr>\\n                </thead>\\n                <tbody *ngIf=\\\"itemList.length\\\">\\n                    <tr *ngFor=\\\"let item of itemList; let i = index\\\">\\n                        <td style=\\\"position: relative;cursor: pointer;\\\" (click)=\\\"removeItemFromBill(i)\\\">\\n                            <span style=\\\"color: greenyellow; margin: 0;\\n          font-size: 15px ;\\n        position: relative;\\n        margin-top: 50%;\\\">\\n                                <i class=\\\"fa fa-minus\\\" aria-hidden=\\\"true\\\"></i></span>\\n                        </td>\\n                        <td>\\n                            <p>{{ item.product.name }}({{ item.product.category.name }})</p>\\n                        </td>\\n                        <td>\\n                            <div>\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quantity_{{i}}\\\" min=\\\"1\\\" [(ngModel)]=\\\"item.quantity\\\" (change)=\\\"setTotal(item)\\\" />\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <p>{{ item.price }}</p>\\n                        </td>\\n                        <td>\\n                            <div>\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"discount\\\" [(ngModel)]=\\\"item.discount\\\" step=\\\"5\\\" max=\\\"100\\\" min=\\\"0\\\" (change)=\\\"setTotal(item)\\\" />\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <p>{{ item.total }}</p>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan=\\\"5\\\">\\n                            <p><b>Add discount</b></p>\\n                        </td>\\n                        <td>\\n                            <div style=\\\"width:50px\\\">\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"totalDiscount\\\" [(ngModel)]=\\\"totalDiscount\\\" (blur)=\\\"calculateDiscount()\\\" />\\n                            </div>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td colspan=\\\"5\\\">\\n                            <p><b>Total</b></p>\\n                        </td>\\n                        <td>\\n                            <p>\\n                                <b>{{ totalBill }}</b>\\n                            </p>\\n                        </td>\\n                    </tr>\\n                    <tr *ngIf=\\\"itemList.length\\\">\\n                        <td colspan=\\\"3\\\">\\n                            <button class=\\\"btn\\\" style=\\\"float: right;\\\" (click)=\\\"cancelBill()\\\">\\n                                Cancel\\n                            </button>\\n                        </td>\\n                        <td colspan=\\\"1\\\">\\n                            <button class=\\\"btn\\\" style=\\\"float: right;\\\" *ngIf=\\\"!updateMode\\\" (click)=\\\"setPrintingBill(paymentModeContent)\\\">\\n                                Generate\\n                            </button>\\n                            <button class=\\\"btn\\\" style=\\\"float: right;\\\" *ngIf=\\\"updateMode\\\" (click)=\\\"update(billContent)\\\">\\n                                Update\\n                            </button>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </form>\\n    </div>\\n    <div class=\\\"col-md-7 item-view-pane\\\">\\n        <nav class=\\\"nav nav-tabs\\\">\\n            <li class=\\\"nav-item\\\" *ngFor=\\\"let cat of categoryList\\\">\\n                <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"!cat.activeStatus\\\" [ngClass]=\\\"{ active: selectedCategory == cat.name }\\\" (click)=\\\"filter(cat.id, cat.name)\\\">{{ cat.name\\n                    }}\\n                </a>\\n            </li>\\n        </nav>\\n        <div class=\\\"row\\\">\\n            <div *ngFor=\\\"let product of productList\\\" class=\\\"col-md-2 p-1\\\" id=\\\"productsInBill\\\" [hidden]=\\\"\\n          (product.category.rawMaterial && !product?.inventory) ||\\n          product.activeStatus ||\\n          product.category.activeStatus\\n        \\\" [ngClass]=\\\"{\\n          'text-red': product.inventory < product.minimumAvailability\\n        }\\\" (click)=\\\"addToList(product)\\\">\\n                <b>\\n                    <h5>{{ product.name }}</h5>\\n                </b>\\n                <b><small>({{ selectedCategory }})</small></b>\\n                <b>\\n                    <p>{{ product.price }}.rs</p>\\n                </b>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #billContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Bill</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div id=\\\"print-section\\\" style=\\\"margin: 2;\\\">\\n                <div style=\\\"text-align: center;\\\">\\n                    <small>NATURAL FRESH ICE CREAMS</small><br />\\n                    <small>SRI YOGESHWARA ENTERPRISE</small><br />\\n                    <small>TAX INVOICE #{{ printingBill.id + 1 }}</small>\\n                    <br />\\n                    <small>YELLAMMAGUTTA, NZB</small><br />\\n                </div>\\n                <hr />\\n                <div style=\\\"display: inline;\\\">\\n                    <div style=\\\"float: left;\\\">\\n                        <p *ngIf=\\\"printingBill?.contact?.name\\\">\\n                            <small>Name: {{ printingBill.contact.name }}</small>\\n                        </p>\\n                        <p>\\n                            <small>Date:{{ printingBill.date | date }},{{\\n                                printingBill.date | date: \\\"h:mm:ss a\\\"\\n                                }}</small>\\n                        </p>\\n                    </div>\\n                    <div style=\\\"float: right;\\\">\\n                        <p *ngIf=\\\"printingBill?.contact?.phone?.length >= 10\\\">\\n                            <small>Phone: {{ printingBill.contact.phone }}</small>\\n                        </p>\\n                    </div>\\n                </div>\\n                <div>\\n                    <table class=\\\"table table-sm\\\">\\n                        <thead>\\n                            <tr>\\n                                <th>Name</th>\\n                                <th>Qty</th>\\n                                <th>Price</th>\\n                                <th>Disc(%)</th>\\n                                <th>Total</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody *ngIf=\\\"itemList.length\\\">\\n                            <tr *ngFor=\\\"let item of printingBill.items; let i = index\\\">\\n                                <td>\\n                                    {{ item.product.name }}({{ item.product.category.name }})\\n                                </td>\\n                                <td>\\n                                    {{ item.quantity }}\\n                                </td>\\n                                <td>\\n                                    {{ item.price }}\\n                                </td>\\n                                <td>\\n                                    {{ item.discount }}\\n                                </td>\\n                                <td>\\n                                    {{ item.total }}\\n                                </td>\\n                            </tr>\\n                            <tr *ngIf=\\\"printingBill.totalDiscount\\\">\\n                                <td colspan=\\\"4\\\">\\n                                    <b>Additional Discount</b>\\n                                </td>\\n                                <td>\\n                                    <b>{{ printingBill.totalDiscount }}</b>\\n                                </td>\\n                            </tr>\\n                            <tr>\\n                                <td colspan=\\\"4\\\">\\n                                    <b>Total</b>\\n                                </td>\\n                                <td>\\n                                    <b>{{ printingBill.total }}</b>\\n                                </td>\\n                            </tr>\\n                        </tbody>\\n                    </table>\\n\\n                    <hr />\\n                    <span>Payment Mode : {{ printingBill.paymentMode }}</span>\\n                </div>\\n                <div style=\\\"text-align: center;\\\">\\n                    <hr />\\n                    <small>THANK YOU! VISIT AGAIN</small>\\n                    <hr />\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" printSectionId=\\\"print-section\\\" [printStyle]=\\\"{\\n          div: { 'margin-left': '-5px', 'margin-right': '-5px' }\\n        }\\\" (click)=\\\"generateBill()\\\" ngxPrint>\\n                Print\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close('Close click')\\\">\\n                Close\\n            </button>\\n        </div>\\n    </div>\\n</ng-template>\\n<ng-template #paymentModeContent let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n            <h4 class=\\\"modal-title\\\">Choose Payment Mode</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n            <div class=\\\"p-3\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <select id=\\\"payMode\\\" class=\\\"form-control\\\" name=\\\"pm\\\" [(ngModel)]=\\\"paymentMode\\\" #pm=\\\"ngModel\\\" required>\\n                            <option [ngValue]=\\\"undefined\\\" hidden selected>\\n                                Payment Mode <label class=\\\"required\\\" for=\\\"pm\\\">*</label>\\n                            </option>\\n                            <option *ngFor=\\\"let cl of paymentTypes\\\">{{ cl }} </option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <select id=\\\"ordertype\\\" class=\\\"form-control\\\" name=\\\"ot\\\" [(ngModel)]=\\\"orderType\\\" #ot=\\\"ngModel\\\" required>\\n                            <option [ngValue]=\\\"undefined\\\" hidden selected>\\n                                Order Type <label class=\\\"required\\\" for=\\\"ot\\\">*</label>\\n                            </option>\\n                            <option *ngFor=\\\"let ot of orderTypes\\\">{{ ot }} </option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"invoicedt\\\" [(ngModel)]=\\\"invoiceDate\\\" #invoicedt=\\\"ngModel\\\" required>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-12\\\" *ngIf=\\\"paymentMode == 'Cash'\\\">\\n                    <table>\\n                        <tr>\\n                            <td>\\n                                <h3>Total:</h3>\\n                            </td>\\n                            <td>\\n                                <h5>{{ totalBill }}</h5>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>\\n                                <h3>Given:</h3>\\n                            </td>\\n                            <td>\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" style=\\\"color: black;\\\" (keyup)=\\\"calculateBill($event)\\\" />\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>\\n                                <h3>Return:</h3>\\n                            </td>\\n                            <td>\\n                                <h5>{{ giveAmount }}</h5>\\n                            </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" [disabled]=\\\"!paymentMode\\\" (click)=\\\"proceedToPrint(billContent)\\\">\\n                Next\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"close('Close click')\\\">\\n                Close\\n            </button>\\n        </div>\\n    </div>\\n</ng-template>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ItemComponent } from './item.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ItemComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ItemRoutingModule { }\n","export default \".istore-table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ninput[type='text'],input[type='number'] {\\r\\n  margin-top: 0px;\\r\\n  font-size: 1rem;\\r\\n  border: 0;\\r\\n  border-bottom: 2px solid greenyellow;\\r\\n  background-color: inherit;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ninput[type='date'] {\\r\\n  margin-top: 0px;\\r\\n  font-size: 1rem;\\r\\n  border: 0;\\r\\n  border-bottom: 2px solid greenyellow;\\r\\n  background-color: inherit;\\r\\n}\\r\\n\\r\\ninput[type='text']:focus,input[type='number']:focus {\\r\\n  background-color: inherit;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nselect :focus {\\r\\n  background-color: inherit;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nselect {\\r\\n  font-size: 1rem;\\r\\n  border: 0;\\r\\n  border-bottom: 2px solid greenyellow;\\r\\n  background-color: inherit;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.item-view-pane {\\r\\n  background-color: #343a40;\\r\\n  color: white;\\r\\n  height: 90vh;\\r\\n  margin-left: -16px;\\r\\n  overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.istore-table p {\\r\\n  font-size: 1rem;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n/* Modal Header */\\r\\n\\r\\n.modal-header {\\r\\n  background-color: #343a40;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/* Modal Body */\\r\\n\\r\\n.modal-body {\\r\\n  padding: 2px 16px;\\r\\n}\\r\\n\\r\\n/* Modal Footer */\\r\\n\\r\\n.modal-footer {\\r\\n  background-color: #343a40;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/* Modal Content */\\r\\n\\r\\n.modal-content {\\r\\n  position: relative;\\r\\n  margin: auto;\\r\\n  padding: 0;\\r\\n  border: 1px solid #888;\\r\\n  width: 100%;\\r\\n  -webkit-animation-name: animatetop;\\r\\n          animation-name: animatetop;\\r\\n  -webkit-animation-duration: 0.4s;\\r\\n          animation-duration: 0.4s\\r\\n}\\r\\n\\r\\n/* Add Animation */\\r\\n\\r\\n@-webkit-keyframes animatetop {\\r\\n  from {\\r\\n    top: -300px;\\r\\n    opacity: 0\\r\\n  }\\r\\n\\r\\n  to {\\r\\n    top: 0;\\r\\n    opacity: 1\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes animatetop {\\r\\n  from {\\r\\n    top: -300px;\\r\\n    opacity: 0\\r\\n  }\\r\\n\\r\\n  to {\\r\\n    top: 0;\\r\\n    opacity: 1\\r\\n  }\\r\\n}\\r\\n\\r\\n.nav-tabs .nav-item.show .nav-link,\\r\\n.nav-tabs .nav-link.active {\\r\\n  background-color: #343a40;\\r\\n  color: #fff;\\r\\n  border-color: #dee2e6 #dee2e6 #fff;\\r\\n  border-bottom: 0;\\r\\n}\\r\\n\\r\\n.required {\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  font-size: 1rem;\\r\\n  border-radius: 20px;\\r\\n  border: 1px solid yellowgreen;\\r\\n  background-color: inherit;\\r\\n  color: currentColor;\\r\\n}\\r\\n\\r\\n.btn:hover {\\r\\n  background-color: greenyellow;\\r\\n}\\r\\n\\r\\n.text-red {\\r\\n  color: tomato;\\r\\n}\\r\\n\\r\\n#productsInBill{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n#productsInBill :hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.alert-danger{\\r\\n  color:red;\\r\\n  background-color: transparent;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sYXlvdXQvaXRlbS9pdGVtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZUFBZTtFQUNmLFNBQVM7RUFDVCxvQ0FBb0M7RUFDcEMseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFDQTtFQUNFLGVBQWU7RUFDZixlQUFlO0VBQ2YsU0FBUztFQUNULG9DQUFvQztFQUNwQyx5QkFBeUI7QUFDM0I7O0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7RUFDZixTQUFTO0VBQ1Qsb0NBQW9DO0VBQ3BDLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBSUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUEsaUJBQWlCOztBQUNqQjtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBRUEsZUFBZTs7QUFDZjtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQSxpQkFBaUI7O0FBQ2pCO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDs7QUFFQSxrQkFBa0I7O0FBQ2xCO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixVQUFVO0VBQ1Ysc0JBQXNCO0VBQ3RCLFdBQVc7RUFDWCxrQ0FBMEI7VUFBMUIsMEJBQTBCO0VBQzFCLGdDQUF1QjtVQUF2QjtBQUNGOztBQUVBLGtCQUFrQjs7QUFDbEI7RUFDRTtJQUNFLFdBQVc7SUFDWDtFQUNGOztFQUVBO0lBQ0UsTUFBTTtJQUNOO0VBQ0Y7QUFDRjs7QUFWQTtFQUNFO0lBQ0UsV0FBVztJQUNYO0VBQ0Y7O0VBRUE7SUFDRSxNQUFNO0lBQ047RUFDRjtBQUNGOztBQUVBOztFQUVFLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsa0NBQWtDO0VBQ2xDLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBQ0E7RUFDRSxlQUFlO0FBQ2pCOztBQUNBO0VBQ0UsU0FBUztFQUNULDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGF5b3V0L2l0ZW0vaXRlbS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlzdG9yZS10YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9J3RleHQnXSxpbnB1dFt0eXBlPSdudW1iZXInXSB7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZWVueWVsbG93O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbmlucHV0W3R5cGU9J2RhdGUnXSB7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGdyZWVueWVsbG93O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbn1cclxuaW5wdXRbdHlwZT0ndGV4dCddOmZvY3VzLGlucHV0W3R5cGU9J251bWJlciddOmZvY3VzIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuc2VsZWN0IDpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbnNlbGVjdCB7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGJvcmRlcjogMDtcclxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgZ3JlZW55ZWxsb3c7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcblxyXG5cclxuLml0ZW0tdmlldy1wYW5lIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBoZWlnaHQ6IDkwdmg7XHJcbiAgbWFyZ2luLWxlZnQ6IC0xNnB4O1xyXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcclxufVxyXG5cclxuLmlzdG9yZS10YWJsZSBwIHtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcblxyXG4vKiBNb2RhbCBIZWFkZXIgKi9cclxuLm1vZGFsLWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qIE1vZGFsIEJvZHkgKi9cclxuLm1vZGFsLWJvZHkge1xyXG4gIHBhZGRpbmc6IDJweCAxNnB4O1xyXG59XHJcblxyXG4vKiBNb2RhbCBGb290ZXIgKi9cclxuLm1vZGFsLWZvb3RlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi8qIE1vZGFsIENvbnRlbnQgKi9cclxuLm1vZGFsLWNvbnRlbnQge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGFuaW1hdGlvbi1uYW1lOiBhbmltYXRldG9wO1xyXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogMC40c1xyXG59XHJcblxyXG4vKiBBZGQgQW5pbWF0aW9uICovXHJcbkBrZXlmcmFtZXMgYW5pbWF0ZXRvcCB7XHJcbiAgZnJvbSB7XHJcbiAgICB0b3A6IC0zMDBweDtcclxuICAgIG9wYWNpdHk6IDBcclxuICB9XHJcblxyXG4gIHRvIHtcclxuICAgIHRvcDogMDtcclxuICAgIG9wYWNpdHk6IDFcclxuICB9XHJcbn1cclxuXHJcbi5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssXHJcbi5uYXYtdGFicyAubmF2LWxpbmsuYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlci1jb2xvcjogI2RlZTJlNiAjZGVlMmU2ICNmZmY7XHJcbiAgYm9yZGVyLWJvdHRvbTogMDtcclxufVxyXG5cclxuLnJlcXVpcmVkIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uYnRuIHtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCB5ZWxsb3dncmVlbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0O1xyXG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbn1cclxuXHJcbi5idG46aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVueWVsbG93O1xyXG59XHJcblxyXG4udGV4dC1yZWQge1xyXG4gIGNvbG9yOiB0b21hdG87XHJcbn1cclxuXHJcbiNwcm9kdWN0c0luQmlsbHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuI3Byb2R1Y3RzSW5CaWxsIDpob3ZlcntcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLmFsZXJ0LWRhbmdlcntcclxuICBjb2xvcjpyZWQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport { HttpService } from \"src/app/services/http.service\";\nimport { ProductModel } from \"../product/product.component.model\";\nimport {\n  NgbModal,\n  ModalDismissReasons,\n  NgbModalRef\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { ItemModel, OrderModel, ContactModel } from \"./item.component.model\";\nimport { URLConstants } from \"src/app/constants/url-constants\";\nimport { CategoryModel } from \"../category/category.component.model\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { StorageService } from \"src/app/services/storage.service\";\nimport { chainedInstruction } from \"@angular/compiler/src/render3/view/util\";\nimport { NgForm } from \"@angular/forms\";\nimport { CustomerModel } from '../customer/customer.component.model';\n\n@Component({\n  selector: \"app-item\",\n  templateUrl: \"./item.component.html\",\n  styleUrls: [\"./item.component.css\"]\n})\nexport class ItemComponent implements OnInit {\n  @ViewChild(\"form\", { read: NgForm, static: true }) form: any;\n  public productList: Array<any> = [];\n  public filterProductList: Array<any> = [];\n  public itemList: Array<any> = [];\n  public customerDetails: ContactModel = <ContactModel>{};\n  public selectedItem: ItemModel = <ItemModel>{};\n  public selectedCategory: string = \"Cup\";\n  public categoryList: Array<CategoryModel> = [];\n  public customerList: Array<any> = [];\n  public paymentTypes: Array<any> = [\"Cash\", \"Bank\"];\n  public orderTypes: Array<any> = [\"Store\", \"Zomato\", \"Swiggy\"];\n  public paymentMode: string = 'Cash';\n  public invoiceDate: string = new Date().toISOString().substring(0, 10);\n  public orderType: string = 'Store';\n  public updateMode: boolean = false;\n  public totalDiscount: number = 0;\n  public totalBill: number = 0.0;\n  public printingBill: any = {};\n  public url = new URLConstants();\n  public giveAmount: any = 0;\n  public closeResult = \"\";\n  private modalRef: NgbModalRef;\n  constructor(\n    private storageService: StorageService,\n    private http: HttpService,\n    private modalService: NgbModal,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.getCategoryList();\n    this.getProductList();\n    this.getCustomerList();\n    if (this.storageService.orderId) {\n      this.updateMode = true;\n      this.http\n        .get(this.url.OrderGetById + this.storageService.orderId)\n        .subscribe(resp => {\n          let temp = resp as any;\n          this.itemList = temp.items;\n          this.totalBill = temp.total;\n          this.customerDetails = temp.contact;\n          this.paymentMode = temp.paymentMode;\n          this.invoiceDate = temp.invoiceDate;\n          this.orderType = temp.orderType;\n        });\n    }\n  }\n\n  async getCustomerList(): Promise<any> {\n    this.customerList = await this.http\n      .get(this.url.CustomerGetAll)\n      .toPromise()\n      .then(resp => resp as any); //Do you own cast here\n    return this.customerList;\n  }\n  async getProductList(): Promise<any> {\n    this.productList = await this.http\n      .get(this.url.ProductGetAll)\n      .toPromise()\n      .then(resp => resp as any); //Do you own cast here\n    this.filterProductList = this.productList;\n    if (this.filterProductList) {\n      this.setFilter();\n    }\n    return this.productList;\n  }\n  async getCategoryList(): Promise<any> {\n    this.categoryList = await this.http\n      .get(this.url.CategoryGetAll)\n      .toPromise()\n      .then(resp => resp as any); //Do you own cast here\n    return this.categoryList;\n  }\n  public setFilter() {\n    this.selectedCategory = \"Cup\";\n    const item = this.categoryList.filter(\n      item => item.name == this.selectedCategory\n    );\n    this.filter(item[0].id, item[0].name);\n  }\n  public addToList(p: any) {\n    if (p.inventory <= 0) {\n      window.alert(\"Item out of stock!\");\n    } else {\n      let index = this.itemList.findIndex(i => i.product.id === p.id);\n      if (index == -1) {\n        this.itemList.push(this.addToModel(p));\n      } else {\n        this.itemList[index].quantity += 1;\n        this.itemList[index].total = this.calculateSingleItemTotal(\n          this.itemList[index]\n        );\n      }\n      this.calculateOrderTotal(this.itemList);\n    }\n  }\n  private addToModel(p: any): any {\n    let bill: any = <any>{};\n    bill.price = p.price;\n    bill.product = p;\n    if (p.defaultDiscount) {\n      bill.discount = p.defaultDiscount;\n    } else if (p.category.defaultDiscount) {\n      bill.discount = p.category.defaultDiscount;\n    } else {\n      bill.discount = 0;\n    }\n    bill.quantity = 1;\n    bill.total = this.calculateSingleItemTotal(bill);\n    return bill;\n  }\n  private calculateSingleItemTotal(p: any) {\n    return (p.quantity * p.product.price * (100 - p.discount)) / 100;\n  }\n  private calculateOrderTotal(p: any) {\n    this.totalBill = 0;\n    p.forEach(i => (this.totalBill += i.total));\n  }\n  public setTotal(p: any) {\n    p.total = Math.ceil((p.quantity * p.price * (100 - p.discount)) / 100);\n    this.calculateOrderTotal(this.itemList);\n  }\n  public generateBill(event) {\n    let finalOrder: OrderModel = <OrderModel>{};\n    finalOrder.total = this.printingBill.total;\n    finalOrder.items = this.printingBill.items;\n    if (Object.keys(this.printingBill.contact).length === 0) {\n      finalOrder.contact = null;\n    } else {\n      finalOrder.contact = this.printingBill.contact;\n    }\n    finalOrder.paymentMode = this.printingBill.paymentMode;\n    finalOrder.invoiceDate = this.printingBill.invoiceDate;\n    finalOrder.totalDiscount = this.printingBill.totalDiscount;\n    finalOrder.orderType = this.printingBill.orderType;\n    this.http.post(finalOrder, this.url.OrderCreate).subscribe(resp => {\n      alert(\"Successfully created\");\n      this.cancelBill();\n      this.form.reset();\n      this.close();\n    });\n  }\n\n  public update() {\n    let finalOrder: OrderModel = <OrderModel>{};\n    finalOrder.id = this.storageService.orderId;\n    finalOrder.total = Math.ceil(this.totalBill);\n    finalOrder.items = this.itemList;\n    finalOrder.contact = this.customerDetails;\n    finalOrder.paymentMode = this.paymentMode;\n    finalOrder.invoiceDate = this.invoiceDate;\n    finalOrder.orderType = this.orderType;\n    this.http.update(finalOrder, this.url.OrderUpdate).subscribe(resp => {\n      // this.printingBill=resp as any;\n      // this.setPrintingBill(event);\n      window.alert(\"Updated successfully.\");\n      this.cancelBill();\n      this.updateMode = false;\n      this.storageService.orderId = null;\n    });\n  }\n\n  public openPaymentOption(event) {\n    this.open(event);\n  }\n  public proceedToPrint(event) {\n    this.printingBill[\"paymentMode\"] = this.paymentMode;\n    this.printingBill[\"invoiceDate\"] = this.invoiceDate;\n    this.printingBill[\"orderType\"] = this.orderType;\n    this.close();\n    this.open(event);\n  }\n  /**Printing bill model */\n  public setPrintingBill(billContent) {\n    this.http.get(this.url.OrderGetId).subscribe(resp => {\n      this.printingBill[\"id\"] = resp as any;\n    });\n    this.printingBill[\"items\"] = this.itemList;\n    this.printingBill[\"total\"] = Math.ceil(this.totalBill);\n    this.printingBill[\"contact\"] = this.customerDetails;\n    this.printingBill[\"date\"] = new Date();\n    this.printingBill[\"totalDiscount\"] = this.totalDiscount;\n\n    this.open(billContent);\n  }\n  public cancelBill() {\n    this.itemList = [];\n    this.totalBill = 0.0;\n    this.paymentMode = undefined;\n    this.invoiceDate = new Date().toISOString().substring(0, 10);\n    this.orderType = 'Store';\n    if (this.updateMode) {\n      this.updateMode = false;\n    }\n    this.customerDetails = <ContactModel>{};\n  }\n\n  /**Filter */\n  public filter(categoryId, categoryName) {\n    this.selectedCategory = categoryName;\n    let temp = [];\n    this.filterProductList.filter(product => {\n      if (categoryId == product.category.id && product.activeStatus == 0) {\n        temp.push(product);\n      }\n    });\n    this.productList = temp;\n  }\n  /**\n   * @param\n   * 1) content consists the modal instance\n   * 2) Selected contains the code of selected row\n   */\n  public open(content: any) {\n    this.modalRef = this.modalService.open(content, { size: 'lg', backdrop: 'static' });\n    this.modalRef.result.then(\n      result => {\n        this.closeResult = `Closed with: ${result}`;\n      },\n      reason => {\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n      }\n    );\n  }\n  public close() {\n    this.modalRef.close();\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return \"by pressing ESC\";\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return \"by clicking on a backdrop\";\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  public removeItemFromBill(i) {\n    this.itemList.splice(i, 1);\n    this.calculateOrderTotal(this.itemList);\n  }\n  public alert() {\n    window.alert(\"Name or Payment mode is empty.\");\n  }\n  public calculateBill(event) {\n    this.giveAmount = 0;\n    this.giveAmount = Math.floor(event.target.value - this.totalBill);\n  }\n  public calculateDiscount() {\n    if (this.totalDiscount > 0) {\n      this.removeDiscountFromIndividual();\n      let temp = (this.totalBill * this.totalDiscount) / 100;\n      this.totalBill -= Math.ceil(temp);\n    } else if (this.totalDiscount == 0 || this.totalDiscount == null) {\n      this.calculateOrderTotal(this.itemList);\n    }\n  }\n  // Remove individual discount once total discount selected\n  private removeDiscountFromIndividual() {\n    this.itemList.map(item => {\n      item.total = item.price;\n      item.discount = 0;\n    });\n    this.calculateOrderTotal(this.itemList);\n  }\n  public onChange(details: any) {\n    this.customerList.forEach((data) => {\n      if (data.name == this.customerDetails.name) {\n        this.customerDetails.phone = data.phone;\n      }\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n;\nimport { FormsModule } from '@angular/forms';\nimport { ItemComponent } from './item.component';\nimport { ItemRoutingModule } from './item-routing.module';\nimport { NgxPrintModule } from 'ngx-print';\n\n\n@NgModule({\n  declarations: [ItemComponent],\n  imports: [\n    CommonModule,\n    ItemRoutingModule,\n    NgxPrintModule,\n    FormsModule\n  ]\n})\nexport class ItemModule { }\n"]}